Description: This patch allows to build festival documentation in PS
 and HTML format therefore building the festival-doc package from
 festival source package.
Forwarded: Yes
Author: Sergio Oller <sergioller@gmail.com>
Last-Update: 2014-01-04

--- a/doc/festival.texi
+++ b/doc/festival.texi
@@ -1,6 +1,12 @@
 \input texinfo @c -*-texinfo-*-
 @c %**start of header
-@setfilename festival.info
+@setfilename festival
+@dircategory Sound
+@dircategory Development
+@direntry
+* Festival: (festival).           Speech synthesis system.
+@end direntry
+@c c@setfilename festival.info
 @settitle Festival Speech Synthesis System
 @finalout
 @setchapternewpage odd
@@ -135,7 +141,7 @@
 @chapter Abstract
 
 This document provides a user manual for the Festival
-Speech Synthesis System, version @value{VERSION}.  
+Speech Synthesis System, version @value{VERSION}.
 
 Festival offers a general framework for building speech synthesis
 systems as well as including examples of various modules.  As a whole it
@@ -190,34 +196,34 @@
 The current copyright on the core system is
 @example
           The Festival Speech Synthesis System: version 1.4.3
-                Centre for Speech Technology Research                  
-                     University of Edinburgh, UK                       
-                      Copyright (c) 1996-2004                            
-                        All Rights Reserved.                           
-                                                                       
-  Permission is hereby granted, free of charge, to use and distribute 
-  this software and its documentation without restriction, including  
-  without limitation the rights to use, copy, modify, merge, publish, 
-  distribute, sublicense, and/or sell copies of this work, and to     
-  permit persons to whom this work is furnished to do so, subject to  
-  the following conditions:                                           
-   1. The code must retain the above copyright notice, this list of   
-      conditions and the following disclaimer.                        
-   2. Any modifications must be clearly marked as such.               
-   3. Original authors' names are not deleted.                        
-   4. The authors' names are not used to endorse or promote products  
-      derived from this software without specific prior written       
-      permission.                                                     
-                                                                       
-  THE UNIVERSITY OF EDINBURGH AND THE CONTRIBUTORS TO THIS WORK        
-  DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING      
-  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT   
-  SHALL THE UNIVERSITY OF EDINBURGH NOR THE CONTRIBUTORS BE LIABLE     
-  FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    
-  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN   
-  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,          
-  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF       
-  THIS SOFTWARE.                                                       
+                Centre for Speech Technology Research
+                     University of Edinburgh, UK
+                      Copyright (c) 1996-2004
+                        All Rights Reserved.
+
+  Permission is hereby granted, free of charge, to use and distribute
+  this software and its documentation without restriction, including
+  without limitation the rights to use, copy, modify, merge, publish,
+  distribute, sublicense, and/or sell copies of this work, and to
+  permit persons to whom this work is furnished to do so, subject to
+  the following conditions:
+   1. The code must retain the above copyright notice, this list of
+      conditions and the following disclaimer.
+   2. Any modifications must be clearly marked as such.
+   3. Original authors' names are not deleted.
+   4. The authors' names are not used to endorse or promote products
+      derived from this software without specific prior written
+      permission.
+
+  THE UNIVERSITY OF EDINBURGH AND THE CONTRIBUTORS TO THIS WORK
+  DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
+  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT
+  SHALL THE UNIVERSITY OF EDINBURGH NOR THE CONTRIBUTORS BE LIABLE
+  FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
+  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
+  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
+  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
+  THIS SOFTWARE.
 @end example
 
 @node Acknowledgements, What is new, Copying, Top
@@ -259,7 +265,7 @@
 for providing such a useful and well-written sub-system.
 @example
                        Scheme In One Defun (SIOD)
-                       COPYRIGHT (c) 1988-1994 BY 
+                       COPYRIGHT (c) 1988-1994 BY
         PARADIGM ASSOCIATES INCORPORATED, CAMBRIDGE, MASSACHUSETTS.
                            ALL RIGHTS RESERVED
 
@@ -291,23 +297,23 @@
 within the standard speech tools distribution) and our modifications
 fall under the following licence.
 @example
-Copyright 1992 Simmule Turner and Rich Salz.  All rights reserved.       
-                                                                         
-This software is not subject to any license of the American Telephone    
-and Telegraph Company or of the Regents of the University of California. 
-                                                                         
-Permission is granted to anyone to use this software for any purpose on  
-any computer system, and to alter it and redistribute it freely, subject 
-to the following restrictions:                                           
-1. The authors are not responsible for the consequences of use of this   
-   software, no matter how awful, even if they arise from flaws in it.   
-2. The origin of this software must not be misrepresented, either by     
-   explicit claim or by omission.  Since few users ever read sources,    
-   credits must appear in the documentation.                             
-3. Altered versions must be plainly marked as such, and must not be      
-   misrepresented as being the original software.  Since few users       
-   ever read sources, credits must appear in the documentation.          
-4. This notice may not be removed or altered.                            
+Copyright 1992 Simmule Turner and Rich Salz.  All rights reserved.
+
+This software is not subject to any license of the American Telephone
+and Telegraph Company or of the Regents of the University of California.
+
+Permission is granted to anyone to use this software for any purpose on
+any computer system, and to alter it and redistribute it freely, subject
+to the following restrictions:
+1. The authors are not responsible for the consequences of use of this
+   software, no matter how awful, even if they arise from flaws in it.
+2. The origin of this software must not be misrepresented, either by
+   explicit claim or by omission.  Since few users ever read sources,
+   credits must appear in the documentation.
+3. Altered versions must be plainly marked as such, and must not be
+   misrepresented as being the original software.  Since few users
+   ever read sources, credits must appear in the documentation.
+4. This notice may not be removed or altered.
 @end example
 
 @section Edinburgh Speech Tools Library
@@ -319,7 +325,7 @@
 those who have contributed to the Speech Tools make Festival
 a more usable system.
 
-@xref{Acknowledgements, , Acknowledgements, speechtools, 
+@xref{Acknowledgements, , Acknowledgements, speechtools,
       Edinburgh Speech Tools Library Manual}.
 
 Online information about the Edinburgh Speech Tools library
@@ -341,7 +347,7 @@
 directorship and LPC diphone code, design of diphone schema.
 @item EPSRC:
 who fund Alan Black and Paul Taylor.
-@item Sun Microsystems Laboratories: 
+@item Sun Microsystems Laboratories:
 for supporting the project and funding Richard.
 @item AT&T Labs - Research:
 for supporting the project.
@@ -371,7 +377,7 @@
 @item Samuel Audet @file{guardia@@cam.org}:
 OS/2 support
 @item Mari Ostendorf:
-For providing access to the BU FM Radio corpus from which some 
+For providing access to the BU FM Radio corpus from which some
 modules were trained.
 @item Melvin Hunt:
 from whose work we based our residual LPC synthesis model on
@@ -390,7 +396,7 @@
 for first getting Paul and Alan to work together and for the
 experience we gained.
 @item FSF:
-for G++, make, .... 
+for G++, make, ....
 @item Center for Spoken Language Understanding:
 CSLU at OGI, particularly Ron Cole and Mike Macon, have acted as
 significant users for the system giving significant feedback and
@@ -420,7 +426,7 @@
 1.4.0 is not functionally so different from its previous versions.
 This release is primarily a consolidation release fixing and tidying
 up some of the lower level aspects of the system to allow better
-modularity for some of our future planned modules.  
+modularity for some of our future planned modules.
 
 @itemize @bullet
 @item Copyright change:
@@ -436,10 +442,10 @@
 compatibility reasons.  This is a much higher dependence of features
 and easier (and safer) ways to register new objects as feature values
 and Scheme objects.  Scheme has been tidied up.  It is no longer
-"in one defun" but "in one directory". 
+"in one defun" but "in one directory".
 
 @item New documentation system for speech tools:
-A new docbook based documentation system has been added to the 
+A new docbook based documentation system has been added to the
 speech tools.  Festival's documentation will will move
 over to this sometime soon too.
 
@@ -449,7 +455,7 @@
 investgated under Solaris and Linux.
 
 @item Generalization of statistical models:  CART, ngrams,
-and WFSTs are now fully supported from Lisp and can be used with a 
+and WFSTs are now fully supported from Lisp and can be used with a
 generalized viterbi function.  This makes adding quite complex statistical
 models easy without adding new C++.
 
@@ -459,7 +465,7 @@
 
 @item Documentation on Bulding New Voices in Festival:
 documentation, scripts etc. for building new voices and languages in
-the system, see 
+the system, see
 @example
 @url{http://www.cstr.ed.ac.uk/projects/festival/docs/festvox/}
 @end example
@@ -509,7 +515,7 @@
 improvements.
 
 Festival is specifically designed to allow the addition of new
-modules, easily and efficiently, so that development need not 
+modules, easily and efficiently, so that development need not
 get bogged down in re-implementing the wheel.
 
 But there is another aspect of Festival which makes it more useful than
@@ -545,7 +551,7 @@
 externally from the program @emph{such that} they can reimplemented by
 others, what is the point of doing the work?
 
-Festival offers a common framework where multiple techniques may be 
+Festival offers a common framework where multiple techniques may be
 implemented (by the same or different researchers) so that they may
 be tested more fairly in the same environment.
 
@@ -568,7 +574,7 @@
 there are always new things that can make it better.  However as time
 goes on  Festival's core architecture will stabilise and little or
 no changes will be made.  Other aspects of the system will gain
-greater attention such as waveform synthesis modules, intonation 
+greater attention such as waveform synthesis modules, intonation
 techniques, text type dependent analysers etc.
 
 Festival will improve, so don't expected it to be the same six months
@@ -624,7 +630,7 @@
 @item festival-1.4.3-release.tar.gz
 Festival Speech Synthesis System source
 @item speech_tools-1.2.3-release.tar.gz
-The Edinburgh Speech Tools Library 
+The Edinburgh Speech Tools Library
 @item festlex_NAME.tar.gz
 @cindex lexicon
 The lexicon distribution, where possible, includes the lexicon input
@@ -677,7 +683,7 @@
 Visual C++ v6.0
 @end itemize
 Note if GCC works on one version of Unix it usually works on
-others.  
+others.
 
 @cindex Windows NT/95
 We have compiled both the speech tools and Festival under Windows NT 4.0
@@ -750,7 +756,7 @@
 @section Configuration
 
 First ensure you have a compiled version of the Edinburgh
-Speech Tools Library.  See @file{speech_tools/INSTALL} for 
+Speech Tools Library.  See @file{speech_tools/INSTALL} for
 instructions.
 
 @cindex configuration
@@ -805,7 +811,7 @@
 gmake test
 @end example
 
-To simply make it run with a male US English voice it is 
+To simply make it run with a male US English voice it is
 sufficient to install just
 @example
 festlex_CMU.tar.gz
@@ -857,7 +863,7 @@
 @end example
 in the speech_tools and festival directories. I have only done this
 under unix, it's possible it would work under the cygnus gnuwin32
-system. 
+system.
 
 If @file{make.depend} files exist (i.e. if you have done @file{gnumake
 depend} in unix) equivalent @file{vc_make.depend} files will be created, if not
@@ -869,7 +875,7 @@
 need to have a collection of environment variables set. In Windows NT
 there is an instalation option for Visual C++ which sets these
 globally. Under Windows95 or if you don't ask for them to be set
-globally under NT you need to run 
+globally under NT you need to run
 @example
 vcvars32.bat
 @end example
@@ -888,10 +894,10 @@
 
 Now you can compile. cd to the speech_tools directory and do
 @example
-nmake /nologo /fVCMakefile 
+nmake /nologo /fVCMakefile
 @end example
 @exdent and the library, the programs in main and the test programs should be
-compiled. 
+compiled.
 
 The tests can't be run automatically under Windows. A simple test to
 check that things are probably OK is:
@@ -902,7 +908,7 @@
 
 Next go into the festival directory and do
 @example
-nmake /nologo /fVCMakefile 
+nmake /nologo /fVCMakefile
 @end example
 @exdent to build festival. When it's finished, and assuming you have the
 voices and lexicons unpacked in the right place, festival should run
@@ -1009,9 +1015,9 @@
 resample functions this could be optimal.  The second addition
 audio parameter is @code{Audio_Required_Format} which can be
 used to specify the desired output forms of the file.  The default
-is unheadered raw, but this may be any of the values supported by 
+is unheadered raw, but this may be any of the values supported by
 the speech tools (including nist, esps, snd, riff, aiff, audlab, raw
-and, if you really want it, ascii).  
+and, if you really want it, ascii).
 
 For example suppose you run Festival on a remote machine and are not
 running any network audio system and want Festival to copy files back to
@@ -1021,7 +1027,7 @@
 (Parameter.set 'Audio_Method 'Audio_Command)
 ;; Make output file ulaw 8k (format ulaw implies 8k)
 (Parameter.set 'Audio_Required_Format 'ulaw)
-(Parameter.set 'Audio_Command 
+(Parameter.set 'Audio_Command
  "userhost=`echo $DISPLAY | sed 's/:.*$//'`; rcp $FILE $userhost:$FILE; \
   rsh $userhost \"cat $FILE >/dev/audio\" ; rsh $userhost \"rm $FILE\"")
 @end lisp
@@ -1056,12 +1062,12 @@
 @file{init.scm}, which includes @file{sitevars.scm} and
 @file{siteinit.scm} for local installation, Festival loads the file
 @file{.festivalrc} from the user's home directory (if it exists).  This
-file may contain arbitrary Festival commands.    
+file may contain arbitrary Festival commands.
 
 @node Checking an installation, , Site initialization, Installation
 @section Checking an installation
 
-Once compiled and site initialization is set up you should test 
+Once compiled and site initialization is set up you should test
 to see if Festival can speak or not.
 
 Start the system
@@ -1188,7 +1194,7 @@
 
 @table @code
 @item -q
-start Festival without loading @file{init.scm} or user's 
+start Festival without loading @file{init.scm} or user's
 @file{.festivalrc}
 @item -b
 @itemx --batch
@@ -1203,7 +1209,7 @@
 @cindex tts mode
 Treat file arguments in text-to-speech mode, causing them to be
 rendered as speech rather than interpreted as commands.  When selected
-in interactive mode the command line edit functions are not available 
+in interactive mode the command line edit functions are not available
 @item --command
 @cindex command mode
 Treat file arguments in command mode.  This is the default.
@@ -1212,19 +1218,19 @@
 Set the default language to @var{LANG}.  Currently @var{LANG} may be
 one of @code{english}, @code{spanish} or @code{welsh} (depending on
 what voices are actually available in your installation).
-@item --server 
+@item --server
 After loading any specified files go into server mode.  This is
 a mode where Festival waits for clients on a known port (the
 value of @code{server_port}, default is 1314).  Connected
 clients may send commands (or text) to the server and expect
 waveforms back. @xref{Server/client API}.  Note server mode
 may be unsafe and allow unauthorised access to your
-machine, be sure to read the security recommendations in 
+machine, be sure to read the security recommendations in
 @ref{Server/client API}
 @item --script scriptfile
 @cindex script files
 @cindex Festival script files
-Run scriptfile as a Festival script file.  This is similar to 
+Run scriptfile as a Festival script file.  This is similar to
 to @code{--batch} but it encapsulates the command line arguments into
 the Scheme variables @code{argv} and @code{argc}, so that Festival
 scripts may process their command line arguments just like
@@ -1315,9 +1321,9 @@
 @cindex playing an utterance
 This calls various modules, including tokenizing, duration,. intonation
 etc.  Which modules are called are defined with respect to the type
-of the utterance, in this case @code{Text}. It is possible to 
+of the utterance, in this case @code{Text}. It is possible to
 individually call the modules by hand but you just wanted it to talk didn't
-you.  So 
+you.  So
 @lisp
 festival> (utt.play utt1)
 #<Utterance 1d08a0>
@@ -1365,7 +1371,7 @@
 played at some later time.  The simplest way to do this with festival is
 by using the @file{text2wave} program.  This is a festival script that
 will take a file (or text from standard input) and produce a single
-waveform.  
+waveform.
 
 @cindex text2wave
 An example use is
@@ -1404,29 +1410,29 @@
 @end example
 Another related function is @code{manual-sym} which given a symbol will
 check its documentation string for a cross reference to a manual
-section and request Netscape to display it.  This function is 
-bound to @key{m-m} and will display the appropriate section for 
+section and request Netscape to display it.  This function is
+bound to @key{m-m} and will display the appropriate section for
 the given symbol.
 
 Note also that the @key{TAB} key can be used to find out the name
 of commands available as can the function @code{Help} (remember the
 parentheses).
 
-For more up to date information on Festival regularly check 
+For more up to date information on Festival regularly check
 the Festival Home Page at
 @example
 @url{http://www.cstr.ed.ac.uk/projects/festival.html}
 @end example
 
-Further help is available by mailing questions to 
+Further help is available by mailing questions to
 @example
 festival-help@@cstr.ed.ac.uk
 @end example
-Although we cannot guarantee the time required to answer you, we 
+Although we cannot guarantee the time required to answer you, we
 will do our best to offer help.
 
 @cindex bug reports
-Bug reports should be submitted to 
+Bug reports should be submitted to
 @example
 festival-bug@@cstr.ed.ac.uk
 @end example
@@ -1454,7 +1460,7 @@
 * Scheme references::   Places to learn more about Scheme
 * Scheme fundamentals:: Syntax and semantics
 * Scheme Festival specifics::
-* Scheme I/O:: 
+* Scheme I/O::
 @end menu
 
 @node Scheme references, Scheme fundamentals, , Scheme
@@ -1473,7 +1479,7 @@
 @itemize @bullet
 @item
 The Revised Revised Revised Revised Scheme Report, the document
-defining the language is available from 
+defining the language is available from
 @example
 @url{http://tinuviel.cs.wcu.edu/res/ldp/r4rs-html/r4rs_toc.html}
 @end example
@@ -1494,7 +1500,7 @@
 But you want more now, don't you, not just be referred to some
 other book.  OK here goes.
 
-@emph{Syntax}: an expression is an @emph{atom} or a @emph{list}.  A 
+@emph{Syntax}: an expression is an @emph{atom} or a @emph{list}.  A
 list consists of a left paren, a number of expressions and right
 paren.  Atoms can be symbols, numbers, strings or other special
 types like functions, hash tables, arrays, etc.
@@ -1565,7 +1571,7 @@
 @end lisp
 Which will cause a backtrace to be displayed whenever a Scheme error
 occurs. This can be put in your @file{.festivalrc} if you wish.  This
-is especially useful when running Festival in non-interactive mode 
+is especially useful when running Festival in non-interactive mode
 (batch or script mode) so that more information is printed when an error
 occurs.
 
@@ -1590,7 +1596,7 @@
 bugs in parameters or code.  Every effort has been made to ensure
 that the processing of text never causes errors in Festival.
 However when using Festival as a development system it is often
-that errors occur in code.  
+that errors occur in code.
 
 Sometimes in writing Scheme code you know there is a potential for
 an error but you wish to ignore that and continue on to the next
@@ -1611,7 +1617,7 @@
 occurs.
 @lisp
 (unwind-protect
- (process_utt filename) 
+ (process_utt filename)
  (begin
    (format t "Error found in processing %s\n" filename)
    (format t "continuing\n")))
@@ -1632,7 +1638,7 @@
 
 @cindex file i/o in Scheme
 @cindex i/o in Scheme
-Different Scheme's may have quite different implementations of 
+Different Scheme's may have quite different implementations of
 file i/o functions so in this section we will describe the
 basic functions in Festival SIOD regarding i/o.
 
@@ -1750,12 +1756,12 @@
 based on a filename's extension.
 
 Within the command interpreter the function @code{tts} is used
-to render files as text; it takes a filename and the text mode 
+to render files as text; it takes a filename and the text mode
 as arguments.
 
 @menu
 * Utterance chunking::   From text to utterances
-* Text modes::           Mode specific text analysis 
+* Text modes::           Mode specific text analysis
 * Example text mode::    An example mode for reading email
 @end menu
 
@@ -1775,7 +1781,7 @@
 different use.  The following tree is currently used which
 works better than simply using punctuation.
 @lisp
-(defvar eou_tree 
+(defvar eou_tree
 '((n.whitespace matches ".*\n.*\n\\(.\\|\n\\)*") ;; 2 or more newlines
   ((1))
   ((punc in ("?" ":" "!"))
@@ -1845,13 +1851,13 @@
 Our initial text mode implementation allows configuration both in C++
 and in Scheme.  Obviously in C++ almost anything can be done but it is
 not as easy to reconfigure without recompilation.  Here
-we will discuss those modes which can be fully configured at 
+we will discuss those modes which can be fully configured at
 run time.
 
 A text mode may contain the following
 @table @emph
 @item filter
-A Unix shell program filter that processes the text file in some 
+A Unix shell program filter that processes the text file in some
 appropriate way.  For example for email it might remove uninteresting
 headers and just output the subject, from line and the message body.
 If not specified, an identity filter is used.
@@ -1888,7 +1894,7 @@
 as follows
 @lisp
 (set! auto-text-mode-alist
-      (cons (cons "\\.email$" 'email) 
+      (cons (cons "\\.email$" 'email)
             auto-text-mode-alist))
 @end lisp
 If the function @code{tts} is called with a mode other than @code{nil}
@@ -1927,7 +1933,7 @@
 be read in HTML mode.
 @example
 (set! auto-text-mode-alist
-      (cons (cons "\\.html?$" 'html) 
+      (cons (cons "\\.html?$" 'html)
             auto-text-mode-alist))
 @end example
 Then you may synthesize an HTML file either from Scheme
@@ -1961,13 +1967,13 @@
 #  Email filter for Festival tts mode
 #  usage: email_filter mail_message >tidied_mail_message
 grep "^From: " $1
-echo 
+echo
 grep "^Subject: " $1
 echo
 # delete up to first blank line (i.e. the header)
 sed '1,/^$/ d' $1
 @end example
-Next we define the email init function, which will be called 
+Next we define the email init function, which will be called
 when we start this mode.  What we will do is save the current
 token to words function and slot in our own new one.  We can
 then restore the previous one when we exit.
@@ -1982,7 +1988,7 @@
 @code{token_to_words} should be set to ensure that our new
 token to word function is still used when we change voices.
 
-The corresponding end function puts the token to words function 
+The corresponding end function puts the token to words function
 back.
 @lisp
 (define (email_exit_func)
@@ -1993,7 +1999,7 @@
 Now we can define the email specific token to words function.  In this
 example we deal with two specific cases.  First we deal with the common
 form of email addresses so that the angle brackets are not pronounced.
-The second points are to recognise quoted text and immediately change the 
+The second points are to recognise quoted text and immediately change the
 the speaker to the alternative speaker.
 @lisp
 (define (email_token_to_words token name)
@@ -2011,7 +2017,7 @@
      (append
       (email_previous_t2w_func token
        (string-after (string-before name "@@") "<"))
-      (cons 
+      (cons
        "at"
        (email_previous_t2w_func token
         (string-before (string-after name "@@") ">")))))
@@ -2023,7 +2029,7 @@
 greater than signs which are the first token on a line.
 @lisp
    ((and (string-matches name ">")
-         (string-matches (item.feat token "whitespace") 
+         (string-matches (item.feat token "whitespace")
                          "[ \t\n]*\n *"))
     (voice_don_diphone)
     nil ;; return nothing to say
@@ -2037,7 +2043,7 @@
 switch back to the primary speaker.
 @lisp
    (t  ;; for all other cases
-     (if (string-matches (item.feat token "whitespace") 
+     (if (string-matches (item.feat token "whitespace")
                          ".*\n[ \t\n]*")
          (voice_rab_diphone))
      (email_previous_t2w_func token name))))
@@ -2057,7 +2063,7 @@
     tts_text_modes))
 @end lisp
 This will now allow simple email messages to be dealt with in a mode
-specific way.  
+specific way.
 
 An example mail message is included in @file{examples/ex1.email}.  To
 hear the result of the above text mode start Festival, load
@@ -2137,7 +2143,7 @@
 
 @example
 <?xml version="1.0"?>
-<!DOCTYPE SABLE PUBLIC "-//SABLE//DTD SABLE speech mark up//EN" 
+<!DOCTYPE SABLE PUBLIC "-//SABLE//DTD SABLE speech mark up//EN"
       "Sable.v0_2.dtd"
 []>
 <SABLE>
@@ -2149,11 +2155,11 @@
 Good morning <BREAK /> My name is Stuart, which is spelled
 <RATE SPEED="-40%">
 <SAYAS MODE="literal">stuart</SAYAS> </RATE>
-though some people pronounce it 
+though some people pronounce it
 <PRON SUB="stoo art">stuart</PRON>.  My telephone number
 is <SAYAS MODE="literal">2787</SAYAS>.
 
-I used to work in <PRON SUB="Buckloo">Buccleuch</PRON> Place, 
+I used to work in <PRON SUB="Buckloo">Buccleuch</PRON> Place,
 but no one can pronounce that.
 
 By the way, my telephone number is actually
@@ -2182,7 +2188,7 @@
 will form over the next few months.  As adding support for new tags is
 often trivial the problem lies much more in defining what tags there
 should be than in actually implementing them.    The following
-are based on version 0.2 of Sable as described in 
+are based on version 0.2 of Sable as described in
 @url{http://www.cstr.ed.ac.uk/projects/sable_spec2.html}, though
 some aspects are not currently supported in this implementation.
 Further updates will be announces through the Sable mailing list.
@@ -2214,7 +2220,7 @@
 the waveform is to be played in the background of the following
 text or not.  Festival as yet only supports insertion.
 @example
-My telephone number is 
+My telephone number is
 <AUDIO SRC="http://www.cstr.ed.ac.uk/~awb/sounds/touchtone.2.au"/>
 <AUDIO SRC="http://www.cstr.ed.ac.uk/~awb/sounds/touchtone.7.au"/>
 <AUDIO SRC="http://www.cstr.ed.ac.uk/~awb/sounds/touchtone.8.au"/>
@@ -2258,19 +2264,19 @@
 @code{date}, @code{time}, @code{phone}, @code{net}, @code{postal},
 @code{currency}, @code{math}, @code{fraction}, @code{measure},
 @code{ordinal}, @code{cardinal}, or @code{name}.  Further specification
-of type for dates (MDY, DMY etc) may be speficied through the 
+of type for dates (MDY, DMY etc) may be speficied through the
 @code{MODETYPE} attribute.
 @example
-As a test of marked-up numbers. Here we have 
-a year <SAYAS MODE="date">1998</SAYAS>, 
-an ordinal <SAYAS MODE="ordinal">1998</SAYAS>, 
-a cardinal <SAYAS MODE="cardinal">1998</SAYAS>, 
-a literal <SAYAS MODE="literal">1998</SAYAS>, 
+As a test of marked-up numbers. Here we have
+a year <SAYAS MODE="date">1998</SAYAS>,
+an ordinal <SAYAS MODE="ordinal">1998</SAYAS>,
+a cardinal <SAYAS MODE="cardinal">1998</SAYAS>,
+a literal <SAYAS MODE="literal">1998</SAYAS>,
 and phone number <SAYAS MODE="phone">1998</SAYAS>.
 @end example
 @item EMPH
 To specify enclose text should be emphasized, a @code{LEVEL}
-attribute may be specified but its value is currently 
+attribute may be specified but its value is currently
 ignored by Festival (besides the emphasis Festival generates
 isn't very good anyway).
 @example
@@ -2321,7 +2327,7 @@
 
 We do not yet claim that there is a fixed standard for Sable tags but
 we wish to move towards such a standard.  In the mean time we have
-made it easy in Festival to add support for new tags without, in 
+made it easy in Festival to add support for new tags without, in
 general, having to change any of the core functions.
 
 Two changes are necessary to add a new tags.  First, change the
@@ -2346,7 +2352,7 @@
 
 The tag-functions are defined in an elements list.  They are identified
 with names such as "(SABLE" and ")SABLE" denoting start and end tags
-respectively.  Two arguments are passed to these tag functions, 
+respectively.  Two arguments are passed to these tag functions,
 an assoc list of attributes and values as specified in the document
 and the current utterances.  If the tag denotes an utterance
 break, call @code{xxml_synth} on @code{UTT} and return @code{nil}.
@@ -2412,12 +2418,12 @@
 Many people experimenting with Sable (and TTS in general) often want all
 the waveform output to be saved to be played at a later date.  The
 simplest way to do this is using the @file{text2wave} script, It
-respects the audo mode selection so 
+respects the audo mode selection so
 @example
 text2wave fred.sable -o fred.wav
 @end example
 Note this renders the file a single waveform (done by concatenating
-the waveforms for each utterance in the Sable file).  
+the waveforms for each utterance in the Sable file).
 
 If you wish the waveform for each utterance in a file saved you can
 cause the tts process to save the waveforms during synthesis.  A
@@ -2442,15 +2448,15 @@
 @cindex Emacs interface
 One easy method of using Festival is via an Emacs interface
 that allows selection of text regions to be sent to Festival for
-rendering as speech.  
+rendering as speech.
 
 @cindex @file{festival.el}
 @cindex @code{say-minor-mode}
 @file{festival.el} offers a new minor mode which offers
-an extra menu (in emacs-19 and 20) with options for saying a selected 
-region, or a whole buffer, as well as various general control 
+an extra menu (in emacs-19 and 20) with options for saying a selected
+region, or a whole buffer, as well as various general control
 functions.  To use this you must install @file{festival.el} in
-a directory where Emacs can find it, then add to your 
+a directory where Emacs can find it, then add to your
 @file{.emacs} in your home directory the following lines.
 @lisp
 (autoload 'say-minor-mode "festival" "Menu for using Festival." t)
@@ -2502,13 +2508,13 @@
 @lisp
    (
      (vc + -)             ;; vowel consonant
-     (vlength short long diphthong schwa 0)  ;; vowel length 
+     (vlength short long diphthong schwa 0)  ;; vowel length
      ...
    )
 @end lisp
 The third section is a list of phone definitions themselves.  Each phone
 definition consists of a phone name and the values for each feature in
-the order the features were defined in the above section. 
+the order the features were defined in the above section.
 
 A typical example of a phoneset definition can be found in
 @file{lib/mrpa_phones.scm}.
@@ -2591,7 +2597,7 @@
 Lexical entries consist of three basic parts, a head word, a part of
 speech and a pronunciation.  The headword is what you might normally
 think of as a word e.g. @samp{walk}, @samp{chairs} etc.  but it might be
-any token.  
+any token.
 
 @cindex part of speech tag
 @cindex POS
@@ -2603,7 +2609,7 @@
 speech tag mapping for each lexicon.  The value should be a reverse
 assoc-list of the following form
 @lisp
-(lex.set.pos.map 
+(lex.set.pos.map
    '((( punc fpunc) punc)
      (( nn nnp nns nnps ) n)))
 @end lisp
@@ -2679,7 +2685,7 @@
 @end lisp
 @cindex letter to sound rules
 The method for dealing with unknown words, @xref{Letter to sound rules}, may
-be set 
+be set
 @lisp
 (lex.set.lts.method 'lts_rules)
 (lex.set.lts.ruleset 'nrl)
@@ -2692,15 +2698,15 @@
 
 @cindex addenda
 @cindex lexicon addenda
-Finally addenda items may be added for words that are known to 
+Finally addenda items may be added for words that are known to
 be common, but not in the lexicon and cannot reasonably be analysed by
 the letter to sound rules.
 @lisp
-(lex.add.entry 
+(lex.add.entry
   '( "awb" n ((( ei ) 1) ((d uh) 1) ((b @@ l) 0) ((y uu) 0) ((b ii) 1))))
-(lex.add.entry 
+(lex.add.entry
   '( "cstr" n ((( s ii ) 1) (( e s ) 1) (( t ii ) 1) (( aa ) 1)) ))
-(lex.add.entry 
+(lex.add.entry
   '( "Edinburgh" n ((( e m ) 1) (( b r @@ ) 0))) ))
 @end lisp
 Using @code{lex.add.entry} again for the same word and part of speech
@@ -2732,9 +2738,9 @@
 When looking up a word, either through the C++ interface, or
 Lisp interface, a word is identified by its headword and part of
 speech.  If no part of speech is specified, @code{nil} is assumed
-which matches any part of speech tag.  
+which matches any part of speech tag.
 
-The lexicon look up process first checks the addenda, if there is 
+The lexicon look up process first checks the addenda, if there is
 a full match (head word plus part of speech) it is returned.  If
 there is an addenda entry whose head word matches and whose part
 of speech is @code{nil} that entry is returned.
@@ -2761,7 +2767,7 @@
 Optional pre- and post-lookup hooks can be specified for a lexicon.
 As a single (or list of) Lisp functions.  The pre-hooks will
 be called with two arguments (word and features) and should return
-a pair (word and features).  The post-hooks will be given a 
+a pair (word and features).  The post-hooks will be given a
 lexical entry and should return a lexical entry.  The pre- and
 post-hooks do nothing by default.
 
@@ -2848,7 +2854,7 @@
 (define (cmu_us_awb::cmu_lookup_post entry)
   "(cmu_us_awb::cmu_lookup_post entry)
 Speaker specific lexicon addeda."
-  (let ((ne 
+  (let ((ne
 	 (assoc_string (car entry) cmu_us_awb::lexicon_addenda)))
     (if ne
 	ne
@@ -2863,7 +2869,7 @@
     ...
     (lex.select "cmu")
     ;; Get old var for reset and to append our function to is
-    (set! cmu_us_awb::old_cmu_post_hooks 
+    (set! cmu_us_awb::old_cmu_post_hooks
        (lex.set.post_hooks nil))
     (lex.set.post_hooks
        (append cmu_us_awb::old_cmu_post_hooks
@@ -2907,8 +2913,8 @@
 @item Error
 Throw an error when an unknown word is found (default).
 @item lts_rules
-Use externally specified set of letter to sound rules (described 
-below).  The name of the rule set to use is defined with the 
+Use externally specified set of letter to sound rules (described
+below).  The name of the rule set to use is defined with the
 @code{lex.lts.ruleset} function.  This method runs one
 set of rules on an exploded form of the word and assumes the rules
 return a list of phonemes (in the appropriate set).  If multiple
@@ -2925,7 +2931,7 @@
 
 The basic letter to sound rule system is very simple but is
 powerful enough to build reasonably complex letter to sound rules.
-Although we've found trained LTS rules better than hand written 
+Although we've found trained LTS rules better than hand written
 ones (for complex languages) where no data is available and rules
 must be hand written the following rule formalism is much easier to
 use than that generated by the LTS training system (described
@@ -2993,14 +2999,14 @@
 @end table
 
 The letter to sound rule system may be used directly from Lisp
-and can easily be used to do relatively complex operations for 
+and can easily be used to do relatively complex operations for
 analyzing words without requiring modification of the C/C++
 system.  For example the Welsh letter to sound rule system consists
 or three rule sets, first to explicitly identify epenthesis, then
 identify stressed vowels, and finally rewrite this augmented
 letter string to phonemes.  This is achieved by
 the following function
-@lisp 
+@lisp
 (define (welsh_lts word features)
   (let (epen str wel)
     (set! epen (lts.apply (downcase word) 'newepen))
@@ -3024,7 +3030,7 @@
 sound system may be built from a lexicon of the language.  This
 technique has successfully been used from English (British and American),
 French and German.  The difficulty and appropriateness of using
-letter to sound rules is very language dependent,  
+letter to sound rules is very language dependent,
 
 The following outlines the processes involved in building a letter to
 sound model for a language given a large lexicon of pronunciations.
@@ -3037,7 +3043,7 @@
 
 The process involves the following steps
 @itemize @bullet
-@item 
+@item
 Pre-processing lexicon into suitable training set
 @item
 Defining the set of allowable pairing of letters to phones.  (We intend
@@ -3046,7 +3052,7 @@
 Constructing the probabilities of each letter/phone pair.
 @item
 Aligning letters to an equal set of phones/_epsilons_.
-@item 
+@item
 Extracting the data by letter suitable for training.
 @item
 Building CART models for predicting phone from letters (and context).
@@ -3093,7 +3099,7 @@
 ("table" nil (t ei b l))
 ("suspicious" nil (s @@ s p i sh @@ s))
 @end lisp
-It is best to split the data into a training set and a test set 
+It is best to split the data into a training set and a test set
 if you wish to know how well your training has worked.  In our
 tests we remove every tenth entry and put it in a test set.  Note this
 will mean our test results are probably better than if we removed
@@ -3105,7 +3111,7 @@
 file of the form
 @lisp
 (require 'lts_build)
-(set! allowables 
+(set! allowables
       '((a _epsilon_)
         (b _epsilon_)
         (c _epsilon_)
@@ -3122,7 +3128,7 @@
 
 To incrementally add to this allowable list run festival as
 @lisp
-festival allowables.scm 
+festival allowables.scm
 @end lisp
 and at the prompt type
 @lisp
@@ -3130,11 +3136,11 @@
 @end lisp
 with your train file.  This will print out each lexical entry
 that couldn't be aligned with the current set of allowables.  At the
-start this will be every entry.  Looking at these entries add 
+start this will be every entry.  Looking at these entries add
 to the allowables to make alignment work.  For example if the
 following word fails
 @lisp
-("abate" nil (ah b ey t)) 
+("abate" nil (ah b ey t))
 @end lisp
 Add @code{ah} to the allowables for letter @code{a}, @code{b} to
 @code{b}, @code{ey} to @code{a} and @code{t} to letter @code{t}.  After
@@ -3151,7 +3157,7 @@
 @code{ch}---having letter @code{c} go to phone @code{ch} and letter
 @code{h} go to @code{_epsilon_} and also letter @code{c} go to phone
 @code{_epsilon_} and letter @code{h} goes to @code{ch}.  However only
-one should be allowed, we preferred @code{c} to @code{ch}.  
+one should be allowed, we preferred @code{c} to @code{ch}.
 
 It may also be the case that some letters give rise to more than one
 phone.  For example the letter @code{x} in English is often pronunced as
@@ -3171,7 +3177,7 @@
 
 The allowables for OALD end up being
 @lisp
-(set! allowables 
+(set! allowables
        '
       ((a _epsilon_ ei aa a e@@ @@ oo au o i ou ai uh e)
        (b _epsilon_ b )
@@ -3207,7 +3213,7 @@
 That information will be generated automatically from the training
 set.
 
-Once the number of failed matches is signficantly low enough 
+Once the number of failed matches is signficantly low enough
 let @code{cummulate-pairs} run to completion.  This counts the number
 of times each letter/phone pair occurs in allowable alignments.
 
@@ -3223,7 +3229,7 @@
 festival allowables.scm oald-pl-table.scm
 @end lisp
 Now each word can be aligned to an equally-lengthed string of phones,
-epsilon and multiphones.  
+epsilon and multiphones.
 @lisp
 festival> (aligndata "oald.train" "oald.train.align")
 @end lisp
@@ -3253,7 +3259,7 @@
 to modify it for your particualr database but it shows the basic
 processes
 @example
-for i in a b c d e f g h i j k l m n o p q r s t u v w x y z 
+for i in a b c d e f g h i j k l m n o p q r s t u v w x y z
 do
    # Stop value for wagon
    STOP=2
@@ -3276,7 +3282,7 @@
 @end example
 The script @file{traintest} splits the given file @file{X} into @file{X.train}
 and @file{X.test} with every tenth line in @file{X.test} and the rest
-in @file{X.train}.  
+in @file{X.train}.
 
 This script can take a significnat amount of time to run, about 6 hours
 on a Sun Ultra 140.
@@ -3297,10 +3303,10 @@
 the 26 lower case letters of the English alphabet, you will need
 to edit this adding accented letters if required.  Note that
 adding "'" (single quote) as a letter is a little tricky in scheme
-but can be done---the command @code{(intern "'")} will give you 
+but can be done---the command @code{(intern "'")} will give you
 the symbol for single quote.
 
-To test a set of lts models load the saved model and call 
+To test a set of lts models load the saved model and call
 the following function with the test align file
 @lisp
 festival oald-table.scm oald_lts_rules.scm
@@ -3312,7 +3318,7 @@
 is, sometimes it will be simple vowel diferences, long versus short,
 schwa versus full vowel, other times it may be who consonants missing.
 Remember the ultimate quality of the letter sound rules is how adequate
-they are at providing @emph{acceptable} pronunciations rather than 
+they are at providing @emph{acceptable} pronunciations rather than
 how good the numeric score is.
 
 @cindex stress assignment
@@ -3324,7 +3330,7 @@
 patterns for English.  If does get 94.6% correct for an unseen test
 set but that isn't really very good.  Later tests suggest that
 predicting stressed and unstressed phones directly is actually
-better for getting whole words correct even though the models 
+better for getting whole words correct even though the models
 do slightly worse on a per phone basis @cite{black98}.
 
 @cindex compressing the lexicon
@@ -3362,17 +3368,17 @@
 is spelled out.  The tokenization assumes that the individual letters of
 the alphabet are in the lexicon with their pronunciations.  They
 should be identified as nouns.  (This is to distinguish @code{a} as
-a determiner which can be schwa'd from @code{a} as a letter which 
+a determiner which can be schwa'd from @code{a} as a letter which
 cannot.)  The part of speech should be @code{nn} by default, but the
 value of the variable @code{token.letter_pos} is used and may be
 changed if this is not what is required.
-@item 
+@item
 One character symbols such as dollar, at-sign, percent etc.  Its
 difficult to get a complete list and to know what the pronunciation of
 some of these are (e.g hash or pound sign).  But the letter to sound
 rules cannot deal with them so they need to be explicitly listed.  See
 the list in the function @code{mrpa_addend} in
-@file{festival/lib/dicts/oald/oaldlex.scm}.  This list should 
+@file{festival/lib/dicts/oald/oaldlex.scm}.  This list should
 also contain the control characters and eight bit characters.
 @item
 @cindex possessives
@@ -3383,8 +3389,8 @@
 the tokens it appears with.  The post-lexical rule (the function
 @code{postlex_apos_s_check}) will delete the schwa and devoice the @code{z}
 in appropriate contexts.  Note this post-lexical rule brazenly assumes
-that the unvoiced fricative in the phoneset is @code{s}.  If it 
-is not in your phoneset copy the function (it is in 
+that the unvoiced fricative in the phoneset is @code{s}.  If it
+is not in your phoneset copy the function (it is in
 @file{festival/lib/postlex.scm}) and change it for your phoneset
 and use your version as a post-lexical rule.
 @item
@@ -3454,7 +3460,7 @@
 programs that can convert the originals into Festival's format.
 
 @cindex MOBY lexicon
-The MOBY lexicon has recently been released into the public domain and 
+The MOBY lexicon has recently been released into the public domain and
 will be converted into our format soon.
 
 @node Post-lexical rules, , Available lexicons, Lexicons
@@ -3514,13 +3520,13 @@
 change voiced to unvoiced s if previous is not voiced."
   (mapcar
    (lambda (seg)
-     (if (string-equal "'s" (item.feat 
+     (if (string-equal "'s" (item.feat
                              seg "R:SylStructure.parent.parent.name"))
          (if (string-equal "a" (item.feat seg 'ph_vlng))
-             (if (and (member_string (item.feat seg 'p.ph_ctype) 
+             (if (and (member_string (item.feat seg 'p.ph_ctype)
                                      '(f a))
                       (not (member_string
-                            (item.feat seg "p.ph_cplace") 
+                            (item.feat seg "p.ph_cplace")
                             '(d b g))))
                  t;; don't delete schwa
                  (item.delete seg))
@@ -3617,7 +3623,7 @@
 Unlike previous versions of the system items (then called stream items)
 are not in any particular relations (or stream).  And are merely part of
 the relations they are within.  Importantly this allows much more general
-relations to be made over items that was allowed in the previous 
+relations to be made over items that was allowed in the previous
 system.  This new architecture is the continuation of our goal
 of providing a general efficient structure for representing complex
 interrelated utterance objects.
@@ -3644,7 +3650,7 @@
 a single tree.  This, if the probabilistic parser is called, is a syntactic
 binary branching tree over the members of the @code{Word} relation.
 @item SylStructure
-a list of trees.  This links the @code{Word}, @code{Syllable} and 
+a list of trees.  This links the @code{Word}, @code{Syllable} and
 @code{Segment} relations.  Each @code{Word} is the root of a tree
 whose immediate daughters are its syllables and their daughters in
 turn as its segments.
@@ -3723,7 +3729,7 @@
 before calling a specific module (e.g. choosing between different
 intonation modules).
 
-These types are used when calling the function 
+These types are used when calling the function
 @code{utt.synth} and individual modules may be called explicitly by
 hand if required.
 
@@ -3738,7 +3744,7 @@
 @lisp
 (defSynthType Festival
   (print "synth method Festival")
-  
+
   (print "select")
   (simple_diphone_select utt)
 
@@ -3800,7 +3806,7 @@
 @lisp
 (Utterance Words (I (live (pos v)) in (Reading (pos n) (tone H-H%))))
 @end lisp
-Note: the use of the tone feature requires an intonation mode that 
+Note: the use of the tone feature requires an intonation mode that
 supports it.
 
 Any feature and value named in the input will be added to the Word
@@ -3825,7 +3831,7 @@
 This allows specification of segments, durations and F0 target
 values.
 @lisp
-(Utterance 
+(Utterance
  Segments
  ((# 0.19 )
   (h 0.055 (0 115))
@@ -3907,7 +3913,7 @@
 @item (utt.relation.items UTT RELATIONNAME)
 returns a list of all items in @code{RELATIONNAME} in @code{UTT}.  This
 is nil if no relation of that name exists.  Note for tree relation will
-give the items in pre-order. 
+give the items in pre-order.
 @item (utt.relation_tree UTT RELATIONNAME)
 A Lisp tree presentation of the items @code{RELATIONNAME} in @code{UTT}.
 The Lisp bracketing reflects the tree structure in the relation.
@@ -3968,7 +3974,7 @@
 Return a list of all lefs items (those with no daughters) dominated
 by this item.
 @item (item.next_leaf ITEM)
-Find the next item in this relation that has no daughters.  Note this 
+Find the next item in this relation that has no daughters.  Note this
 may traverse up the tree from this point to search for such an item.
 
 @end table
@@ -4019,7 +4025,7 @@
 Delete this item from all relations it is in.  All daughters of this
 item in each relations are also removed from the relation (which may in
 turn cause them to be deleted if they cease to be referenced by any
-other relation.  
+other relation.
 @item (item.relation.remove ITEM)
 Remove this item from this relation, and any of its daughters.  Other
 relations this item are in remain untouched.
@@ -4051,7 +4057,7 @@
 Daughters of a node are actually represented as a list whose first
 daughter is double linked to the parent.  Although being aware of
 this structure may be useful it is recommended that all access go through
-the tree specific functions @code{*.parent} and @code{*.daughter*} 
+the tree specific functions @code{*.parent} and @code{*.daughter*}
 which properly deal with the structure, thus is the internal structure
 ever changes in the future only these tree access function need be
 updated.
@@ -4077,11 +4083,11 @@
 In addition to simple features there is a mechanism for relating
 functions to names, thus accessing a feature may actually call a
 function.  For example the features @code{num_syls} is defined as a
-feature function which will count the number of syllables in the 
+feature function which will count the number of syllables in the
 given word, rather than simple access a pre-existing feature.  Feature
 functions are usually dependent on the particular realtion the
-item is in, e.g. some feature functions are only appropriate for 
-items in the @code{Word} relation, or only appropriate for those in the 
+item is in, e.g. some feature functions are only appropriate for
+items in the @code{Word} relation, or only appropriate for those in the
 @code{IntEvent} relation.
 
 The third aspect of feature names is a path component.  These are
@@ -4161,7 +4167,7 @@
 (utt.features utt1 'Word '(name pos p.pos n.pos))
 @end lisp
 will return a list of word, and part of speech context for each
-word in the utterance.  
+word in the utterance.
 
 @xref{Extracting features}, for an example of extracting sets
 of features from a database for use in building stochastic models.
@@ -4190,8 +4196,8 @@
 This will save the waveform in the named file in the format specified
 in the @code{Parameter} @code{Wavefiletype}.  All formats supported by
 the Edinburgh Speech Tools are valid including @code{nist}, @code{esps},
-@code{sun}, @code{riff}, @code{aiff}, @code{raw} and @code{ulaw}.  Note
-the functions @code{utt.wave.rescale} and @code{utt.wave.resample} may
+@code{sun}, @code{riff}, @code{aiff}, @code{raw}, @code{alaw} and @code{ulaw}.
+Note the functions @code{utt.wave.rescale} and @code{utt.wave.resample} may
 be used to change the gain and sample frequency of the waveform before
 saving it.  A waveform may be imported into an existing utterance with
 the function @code{utt.import.wave}.  This is specifically designed to
@@ -4232,7 +4238,7 @@
 
 @menu
 * Tokenizing::    Splitting text into tokens
-* Token to word rules::  
+* Token to word rules::
 * Homograph disambiguation::  "Wed 5 may wind US Sen up"
 @end menu
 
@@ -4322,7 +4328,7 @@
   ((and (string-matches (item.feat token "p.name")
                           "\\$[0-9,]+\\(\\.[0-9]+\\)?")
         (string-matches name ".*illion.?"))
-   (list 
+   (list
     name
     "dollars"))
   (t
@@ -4338,7 +4344,7 @@
 
 @cindex homographs
 Not all tokens can be rendered as words easily.  Their context may affect
-the way they are to be pronounced.  For example in the 
+the way they are to be pronounced.  For example in the
 utterance
 @example
 On May 5 1985, 1985 people moved to Livingston.
@@ -4375,7 +4381,7 @@
 @code{token_pos_cart_trees}.  Each disambiguator consists of a regular
 expression and a CART tree (which may be a decision list as they have the
 same format).  If a token matches the regular expression the CART tree
-is applied to the token and the resulting class is assigned 
+is applied to the token and the resulting class is assigned
 to the token via the feature @code{token_pos}.  This is done
 by the @code{Token_POS} module.
 
@@ -4455,7 +4461,7 @@
 @end example
 
 Extracting the tokens is typically done in two passes.  The first pass
-extracts the context (I've used 5 tokens either side).  It extracts 
+extracts the context (I've used 5 tokens either side).  It extracts
 the file and position, so the token is identified, and the word
 in context.
 
@@ -4525,7 +4531,7 @@
 to be mapped and the new tag they are to be mapped to.
 @end table
 
-Note is it important to have the part of speech tagger match 
+Note is it important to have the part of speech tagger match
 the tags used in later parts of the system, particularly the
 lexicon.  Only two of our lexicons used so far have
 (mappable) part of speech labels.
@@ -4572,8 +4578,8 @@
 suggesting there is still further work required.
 
 Parameters for this module are set through the feature list held
-in the variable @code{phr_break_params}, and example of which 
-for English is set in @code{english_phr_break_params} in 
+in the variable @code{phr_break_params}, and example of which
+for English is set in @code{english_phr_break_params} in
 the file @file{lib/phrase.scm}.  The features names and meaning are
 
 @table @code
@@ -4634,14 +4640,14 @@
 @node Default intonation, Simple intonation, ,Intonation
 @section Default intonation
 
-@cindex duff intonation 
+@cindex duff intonation
 @cindex monotone
 This is the simplest form of intonation and offers the modules
 @code{Intonation_Default} and @code{Intonation_Targets_Default}.  The
 first of which actually does nothing at all.
 @code{Intonation_Targets_Default} simply creates a target at the start
 of the utterance, and one at the end.  The values of which, by default
-are 130 Hz and 110 Hz.  These values may be set through the 
+are 130 Hz and 110 Hz.  These values may be set through the
 parameter @code{duffint_params} for example the following will
 general a monotone at 150Hz.
 @lisp
@@ -4743,7 +4749,7 @@
 a list of target points for a syllable.  In this way any arbitrary
 tests may be done to produce the target points.  For example
 here is a function which returns three target points
-for each syllable with an @code{IntEvent} related to it (i.e. 
+for each syllable with an @code{IntEvent} related to it (i.e.
 accented syllables).
 @lisp
 (define (targ_func1 utt syl)
@@ -4764,7 +4770,7 @@
 (Parameter.set 'Int_Target_Method Int_Targets_General)
 
 (set! int_general_params
-      (list 
+      (list
        (list 'targ_func targ_func1)))
 @end lisp
 
@@ -4802,24 +4808,24 @@
 you must use an utterance type that allows such specification.  For
 example
 @lisp
-(Utterance 
+(Utterance
  Words
  (boy
   (saw ((accent H*)))
    the
    (girl ((accent H*)))
-   in the 
+   in the
    (park ((accent H*) (tone H-)))
-   with the 
+   with the
    (telescope ((accent H*) (tone H-H%)))))
 
-(Utterance Words 
+(Utterance Words
  (The
   (boy ((accent L*)))
   saw
   the
   (girl ((accent H*) (tone L-)))
-  with 
+  with
   the
   (telescope ((accent H*) (tone H-H%))))))
 @end lisp
@@ -4975,7 +4981,7 @@
 translated into a set of coefficients if the desired the signal
 processing method requires it), a set of pitchmarks and an index.  The
 pitchmarks are necessary as most of our current signal processing are
-pitch synchronous.  
+pitch synchronous.
 
 @subsection Generating pitchmarks
 
@@ -5033,7 +5039,7 @@
 
 @cindex diphone index
 The diphone index consists of a short header following by an
-ascii list of each diphone, the file it comes from followed by its 
+ascii list of each diphone, the file it comes from followed by its
 start middle and end times in seconds.  For most databases this
 files needs to be generated by some database specific script.
 
@@ -5047,12 +5053,12 @@
 @end example
 The most notable part is the number of entries, which you should note
 can get out of sync with the actual number of entries if you hand
-edit entries.  I.e. if you add an entry and the system still 
+edit entries.  I.e. if you add an entry and the system still
 can't find it check that the number of entries is right.
 
 The entries themselves may take on one of two forms, full
 entries or index entries.  Full entries consist of a diphone
-name, where the phones are separated by "-"; a file name 
+name, where the phones are separated by "-"; a file name
 which is used to index into the pitchmark, LPC and waveform file;
 and the start, middle (change over point between phones) and end
 of the phone in the file in seconds of the diphone.  For example
@@ -5062,7 +5068,7 @@
 r-i     edx_1003        0.240   0.280   0.321
 r-o     edx_1004        0.212   0.253   0.320
 @end example
-The second form of entry is an index entry which 
+The second form of entry is an index entry which
 simply states that reference to that diphone should actually be made
 to another.  For example
 @example
@@ -5107,7 +5113,7 @@
 simple index or if the index file is a grouped file.
 @item coef_dir
 The directory containing the coefficients, (LPC or just pitchmarks in
-the PSOLA case).  
+the PSOLA case).
 @item sig_dir
 The directory containing the signal files (residual for LPC, full waveforms
 for PSOLA).
@@ -5121,7 +5127,7 @@
 @cindex default diphone
 The diphone to be used when the requested one doesn't exist.  No matter
 how careful you are you should always include a default diphone for
-distributed diphone database.   Synthesis will throw an error if 
+distributed diphone database.   Synthesis will throw an error if
 no diphone is found and there is no default.  Although it is usually
 an error when this is required its better to fill in something than
 stop synthesizing.  Typical values for this are silence to silence
@@ -5140,18 +5146,18 @@
 method for dealing with systematic holes in a diphone database.
 @end table
 
-An example database definition is 
+An example database definition is
 @example
 (set! rab_diphone_dir "/projects/festival/lib/voices/english/rab_diphone")
-(set! rab_lpc_group 
+(set! rab_lpc_group
       (list
        '(name "rab_lpc_group")
-       (list 'index_file 
+       (list 'index_file
              (path-append rab_diphone_dir "group/rablpc16k.group"))
        '(alternates_left ((i ii) (ll l) (u uu) (i@@ ii) (uh @@) (a aa)
                                  (u@@ uu) (w @@) (o oo) (e@@ ei) (e ei)
                                  (r @@)))
-       '(alternates_right ((i ii) (ll l) (u uu) (i@@ ii) 
+       '(alternates_right ((i ii) (ll l) (u uu) (i@@ ii)
                                   (y i) (uh @@) (r @@) (w @@)))
        '(default_diphone @@-@@@@)
        '(grouped "true")))
@@ -5162,7 +5168,7 @@
 
 @cindex group files
 @cindex diphone group files
-The function @code{us_make_group_file} will make a group file 
+The function @code{us_make_group_file} will make a group file
 of the currently selected US diphone database.  It loads in all diphone
 sin the dtabaase and saves them in the named file.  An optional
 second argument allows specification of how the group file will
@@ -5180,7 +5186,7 @@
 @item sig_sample_format
 The format for the samples in the signal files.  By default this
 is @code{mulaw}.  This is suitable when the signal files are LPC
-residuals.  LPC residuals have a much smaller dynamic range that 
+residuals.  LPC residuals have a much smaller dynamic range that
 plain PCM files.  Because @code{mulaw} representation is half the size
 (8 bits) of standard PCM files (16bits) this significantly reduces
 the size of the group file while only marginally altering the quality of
@@ -5229,7 +5235,7 @@
 names which are not simply the concatenation of two segment names.
 
 This feature is used to specify consonant cluster diphone names
-for our English voices.  The hook @code{UniSyn_module_hooks} is run 
+for our English voices.  The hook @code{UniSyn_module_hooks} is run
 before selection and we specify a function to add @code{us_diphone_*}
 features as appropriate.  See the function @code{rab_diphone_fix_phone_name}
 in @file{lib/voices/english/rab_diphone/festvox/rab_diphone.scm} for
@@ -5256,7 +5262,7 @@
 A basic diphone synthesizer offers a method
 for making speech from segments, durations and intonation
 targets.  This module was mostly written by Alistair Conkie
-but the base diphone format is compatible with previous CSTR 
+but the base diphone format is compatible with previous CSTR
 diphone synthesizers.
 
 The synthesizer offers residual excited LPC based synthesis (@cite{hunt89})
@@ -5288,11 +5294,11 @@
 
 For example a partial list of phones may look like.
 @example
-ch-l  r021   412.035  463.009  518.23  
-jh-l  d747   305.841  382.301  446.018 
-h-l   d748   356.814  403.54   437.522 
-#-@@   d404   233.628  297.345  331.327 
-@@-#   d001   836.814  938.761  1002.48 
+ch-l  r021   412.035  463.009  518.23
+jh-l  d747   305.841  382.301  446.018
+h-l   d748   356.814  403.54   437.522
+#-@@   d404   233.628  297.345  331.327
+@@-#   d001   836.814  938.761  1002.48
 @end example
 
 Waveform files may be in any form, as long as every file is the same
@@ -5312,7 +5318,7 @@
 It is normal to hold a diphone database in a directory with
 a number of sub-directories namely @file{dic/} contain
 the dictionary file, @file{wave/} for the waveform files, typically
-of whole nonsense words (sometimes this directory is called 
+of whole nonsense words (sometimes this directory is called
 @file{vox/} for historical reasons) and @file{pm/} for
 the pitch mark files.  The filename in the dictionary entry should
 be the same for waveform file and the pitch mark file (with different
@@ -5393,7 +5399,7 @@
 performance, we haven't finished this work.  @file{lpc_analysis}
 supports pitch synchronous analysis but the raw "ungrouped"
 access method does not yet.  At present the LPC parameters are
-extracted at a particular pitch mark by interpolating over the 
+extracted at a particular pitch mark by interpolating over the
 closest LPC parameters.  The "group" files hold these interpolated
 parameters pitch synchronously.
 
@@ -5418,7 +5424,7 @@
 
 A group file contains the basic parameters, the diphone index, the
 signal (original waveform or LPC residual), LPC coefficients, and the
-pitch marks.  It is all you need for a run-time synthesizer.  
+pitch marks.  It is all you need for a run-time synthesizer.
 Various compression mechanisms are supported to allow smaller databases
 if desired.  A full English LPC plus residual database at 8k ulaw
 is about 3 megabytes, while a full 16 bit version at 16k is about
@@ -5494,11 +5500,11 @@
 and/or up to the pitch marks outside the diphone signal.
 @item alternates_after
 List of pairs of phones stating replacements for the second
-part of diphone when the basic diphone is not found in the 
+part of diphone when the basic diphone is not found in the
 diphone database.
 @item alternates_before
 List of pairs of phones stating replacements for the first
-part of diphone when the basic diphone is not found in the 
+part of diphone when the basic diphone is not found in the
 diphone database.
 @item default_diphone
 When unexpected combinations occur and no appropriate diphone can be
@@ -5511,7 +5517,7 @@
 @end table
 
 Examples of both general set up, making group files and general
-use are in 
+use are in
 @example
 @file{lib/voices/english/rab_diphone/festvox/rab_diphone.scm}
 @end example
@@ -5525,7 +5531,7 @@
 time and space requirements.
 
 @table @code
-@item direct 
+@item direct
 Load all signals at database init time. This is the slowest startup but
 the fastest to access.  This is ideal for servers.  It is also useful
 for small databases that can be loaded quickly.  It is reasonable for
@@ -5584,7 +5590,7 @@
 "(fix_dark_ls UTT)
 Identify ls in coda position and relabel them as ll."
   (mapcar
-   (lambda (seg) 
+   (lambda (seg)
      (if (and (string-equal "l" (item.name seg))
               (string-equal "+" (item.feat seg "p.ph_vc"))
               (item.relation.prev seg "SylStructure"))
@@ -5620,7 +5626,7 @@
 @menu
 * LPC diphone synthesizer::  A small LPC synthesizer (Donovan diphones)
 * MBROLA::                   Interface to MBROLA
-* Synthesizers in development::                
+* Synthesizers in development::
 @end menu
 
 @node LPC diphone synthesizer, MBROLA , , Other synthesis methods
@@ -5688,7 +5694,7 @@
 than as a fully usable waveform synthesis engine.  Although it sometimes
 gives excellent results it also sometimes gives amazingly bad ones too.
 We included this as an example of one possible framework for selection-based
-synthesis.  
+synthesis.
 
 As one of our funded projects is to specifically develop new selection
 based synthesis algorithms we expect to include more models within later
@@ -5709,7 +5715,7 @@
 first work out if you have the appropriate hardware.  If you do, you
 also need the appropriate software to drive it.  Festival can directly
 interface with a number of audio systems or use external
-methods for playing audio.  
+methods for playing audio.
 
 The currently supported audio methods are
 @table @samp
@@ -5778,7 +5784,7 @@
 they include a @file{/dev/dsp} (Soundblaster PRO for example).  This was
 not dealt with properly in earlier versions of the system but now the
 support automatically checks to see the sample width supported and uses
-it accordingly.  8 bit at higher frequencies that 8K sounds better than
+it accordingly.  8 bit at higher frequencies than 8K sounds better than
 straight 8k ulaw so this feature is useful.
 
 @cindex Windows NT audio
@@ -5786,7 +5792,7 @@
 @item mplayer
 Under Windows NT or 95 you can use the @file{mplayer} command which
 we have found requires special treatement to get its parameters right.
-Rather than using @code{Audio_Command} you can select this on 
+Rather than using @code{Audio_Command} you can select this on
 Windows machine with the following command
 @lisp
 (Parameter.set 'Audio_Method 'mplayeraudio)
@@ -5819,7 +5825,7 @@
 @end lisp
 On SGI machines under IRIX the equivalent would be
 @lisp
-(Parameter.set 'Audio_Command 
+(Parameter.set 'Audio_Command
            "sfplay -i integer 16 2scomp rate $SR end $FILE")
 (Parameter.set 'Audio_Method 'Audio_Command)
 @end lisp
@@ -5833,7 +5839,7 @@
 resample functions this could be optimal.  The second additional
 audio parameter is @code{Audio_Required_Format} which can be
 used to specify the desired output forms of the file.  The default
-is unheadered raw, but this may be any of the values supported by 
+is unheadered raw, but this may be any of the values supported by
 the speech tools (including nist, esps, snd, riff, aiff, audlab, raw
 and, if you really want it, ascii).  For example suppose you
 have a program that only plays sun headered files at 16000 KHz you can
@@ -5869,7 +5875,7 @@
 breaks between utterances to be as short as your hardware allows them
 to be.
 
-The audio spooler may be started by selecting asynchronous 
+The audio spooler may be started by selecting asynchronous
 mode
 @lisp
 (audio_mode 'async)
@@ -5889,7 +5895,7 @@
 complete.
 @item (audio_mode 'shutup)
 Close the audio down now, stopping the current file being played and
-any in the queue.  Note that this may take some time to take effect 
+any in the queue.  Note that this may take some time to take effect
 depending on which audio method you use.  Sometimes there can be
 100s of milliseconds of audio in the device itself which cannot
 be stopped.
@@ -5971,7 +5977,7 @@
 MBROLA synthesizer and Roger diphone database (called @code{en1})
 is not distributed by CSTR but is available for non-commercial use
 for free from @url{http://tcts.fpms.ac.be/synthesis/mbrola.html}.
-We do however provide the Festival part of the voice in 
+We do however provide the Festival part of the voice in
 @file{festvox_en1.tar.gz}.
 @item voice_us1_mbrola
 A female Amercian English voice using our standard US English front end and the
@@ -6050,7 +6056,7 @@
   spanish
   ;;;  Phone Features
   (;; vowel or consonant
-   (vc + -)  
+   (vc + -)
    ;; vowel length: short long diphthong schwa
    (vlng s l d a 0)
    ;; vowel height: high mid low
@@ -6121,7 +6127,7 @@
 (lex.add.entry
    '("amigos" nil (((a) 0) ((m i) 1) (g o s))))
 @end example
-A letter to sound rule system for Spanish is quite simple 
+A letter to sound rule system for Spanish is quite simple
 in the format supported by Festival.  The following is a good
 start to a full set.
 @cindex letter to sound rules
@@ -6200,7 +6206,7 @@
 writing new rules for upper case letters we can define that
 a Lisp function be called when looking up a word and intercept
 the lookup with our own function.  First we state that unknown
-words should 
+words should
 call a function, and then define the function we wish called.
 The actual link to ensure our function will be called is done
 below at lexicon selection time
@@ -6232,7 +6238,7 @@
    ((n.name is 0)  ;; end of utterance
     ((BB))
     ((NB))))))
-@end example 
+@end example
 
 @subsection Intonation
 
@@ -6259,11 +6265,11 @@
     '((f0_mean 120) (f0_std 30)))
 @end example
 
-@subsection Duration 
+@subsection Duration
 
 We will use the trick mentioned above for duration prediction.
-Using the zscore CART tree method, we will actually use it to 
-predict factors rather than zscores.  
+Using the zscore CART tree method, we will actually use it to
+predict factors rather than zscores.
 
 The tree predicts longer durations in stressed syllables and in
 clause initial and clause final syllables.
@@ -6329,7 +6335,7 @@
 (us_diphone_init
    (list
     '(name "el_lpc_group")
-    (list 'index_file 
+    (list 'index_file
           (path-append spanish_el_dir "group/ellpc11k.group"))
     '(grouped "true")
     '(default_diphone "#-#")))
@@ -6339,8 +6345,8 @@
 
 The standard way to define a voice in Festival is to define
 a function of the form @code{voice_NAME} which selects
-all the appropriate parameters.  Because the definition 
-below follows the above definitions we know that everything 
+all the appropriate parameters.  Because the definition
+below follows the above definitions we know that everything
 appropriate has been loaded into Festival and hence we
 just need to select the appropriate a parameters.
 
@@ -6349,7 +6355,7 @@
 "(voice_spanish_el)
 Set up synthesis for Male Spanish speaker: Eduardo Lopez"
   (voice_reset)
-  (Parameter.set 'Language 'spanish)  
+  (Parameter.set 'Language 'spanish)
   ;; Phone set
   (Parameter.set 'PhoneSet 'spanish)
   (PhoneSet.select 'spanish)
@@ -6421,7 +6427,7 @@
 possibility of this becoming a problem.  Each voice function
 defined should always call @code{voice_reset} at the start.  This
 will reset any globals and also call a tidy up function provided by
-the previous voice function.  
+the previous voice function.
 
 Likewise in your new voice function you should provide a tidy up
 function to reset any non-standard global variables you set.  The
@@ -6430,7 +6436,7 @@
 @code{nil} then it is not called.  @code{voice_reset} sets
 @code{current_voice_reset} to @code{nil}, after calling it.
 
-For example suppose some new voice requires the audio device to 
+For example suppose some new voice requires the audio device to
 be directed to a different machine.  In this example we make
 the giant's voice go through the netaudio machine @code{big_speakers}
 while the standard voice go through @code{small_speakers}.
@@ -6500,7 +6506,7 @@
 voices will be automatically searched for.  If this is not set it is set
 automatically by appending @file{/voices/} to all paths in festival
 @code{load-path}.  You may add new directories explicitly to this
-variable in your @file{sitevars.scm} file or your own @file{.festivalrc}
+variable in your @file{/etc/festival.scm} file or your own @file{.festivalrc}
 as you wish.
 
 Each voice directory is assumed to be of the form
@@ -6518,17 +6524,17 @@
 @example
 festival/lib/voices/english/ked_diphone/
 @end example
-Its actual definition file is in 
+Its actual definition file is in
 @example
 festival/lib/voices/english/ked_diphone/festvox/ked_diphone.scm
 @end example
 Note the name of the directory and the name of the Scheme definition
-file must be the same.  
+file must be the same.
 
 Alternative voices using perhaps a different encoding of the database but
 the same front end may be defined in the same way by using symbolic
 links in the langauge directoriy to the main directory.  For example
-a PSOLA version of the ked voice may be defined in 
+a PSOLA version of the ked voice may be defined in
 @example
 festival/lib/voices/english/ked_diphone/festvox/ked_psola.scm
 @end example
@@ -6549,9 +6555,9 @@
 function to define them in, for example, the @file{siteinit.scm} file or
 @file{.festivalrc}.  The autoload function takes three arguments:
 a function name, a file containing the actual definiton and a comment.
-For example a definition of voice can be done explicitly by 
+For example a definition of voice can be done explicitly by
 @example
-(autooad voice_f2b  "/home/awb/data/f2b/ducs/f2b_ducs" 
+(autooad voice_f2b  "/home/awb/data/f2b/ducs/f2b_ducs"
      "American English female f2b")))
 @end example
 Of course you can also load the definition file explicitly if you
@@ -6575,11 +6581,11 @@
    (dialect british)
    (description
     "This voice provides a British RP English male voice using a
-     residual excited LPC diphone synthesis method.  It uses a 
+     residual excited LPC diphone synthesis method.  It uses a
      modified Oxford Advanced Learners' Dictionary for pronunciations.
      Prosodic phrasing is provided by a statistically trained model
      using part of speech and local distribution of breaks.  Intonation
-     is provided by a CART tree predicting ToBI accents and an F0 
+     is provided by a CART tree predicting ToBI accents and an F0
      contour generated from a model trained from natural speech.  The
      duration model is also trained from data using a CART tree.")))
 @end lisp
@@ -6613,7 +6619,7 @@
 for entering data, and Scheme and C++ functions for evaluating it.
 
 @menu
-* Regular expressions:: 
+* Regular expressions::
 * CART trees::          Building and using CART
 * Ngrams::              Building and using Ngrams
 * Viterbi decoder::     Using the Viterbi decoder
@@ -6632,7 +6638,7 @@
 as scripting languages like the UNIX shell, PERL, awk, Emacs etc.
 Unfortunately the exact form of regualr expressions often differs
 slightly between different applications making their use often a little
-tricky.  
+tricky.
 
 Festival support regular expressions based mainly of the form used in
 the GNU libg++ @code{Regex} class, though we have our own implementation
@@ -6649,8 +6655,8 @@
 
 @table @code
 @item .
-Matches any character.  
-@item $ 
+Matches any character.
+@item $
 matches end of string
 @item ^
 matches beginning of string
@@ -6662,11 +6668,11 @@
 of parenthesized expression.
 @item X?
 matches zero or one occurrence of X, X may be a character, range
-of parenthesized expression.  
+of parenthesized expression.
 @item [...]
-a ranges matches an of the values in the brackets.  The range 
+a ranges matches an of the values in the brackets.  The range
 operator "-" allows specification of ranges e.g. @code{a-z} for all
-lower case characters.  If the first character of the range is 
+lower case characters.  If the first character of the range is
 @code{^} then it matches anything character except those specified
 in the range.  If you wish @code{-} to be in the range you must
 put that first.
@@ -6687,7 +6693,7 @@
 expressions.
 @table @code
 @item a.b
-matches any three letter string starting with an @code{a} and 
+matches any three letter string starting with an @code{a} and
 ending with a @code{b}.
 @item .*a
 matches any string ending in an @code{a}
@@ -6709,7 +6715,7 @@
 @end table
 
 The Scheme function @code{string-matches} takes a string and
-a regular expression and returns @code{t} if the regular 
+a regular expression and returns @code{t} if the regular
 expression macthes the string and @code{nil} otherwise.
 
 @node CART trees, Ngrams, Regular expressions , Tools
@@ -6786,7 +6792,7 @@
 @code{wagon} is constantly improving and with version 1.2 of the speech
 tools may now be considered fairly stable for its basic operations.
 Experimental features are described in help it gives.  See the
-Speech Tools manual for a more comprehensive discussion of using 
+Speech Tools manual for a more comprehensive discussion of using
 @file{wagon}.
 
 However the above format of trees is similar to those produced by many
@@ -6808,9 +6814,9 @@
 
 Within Festival ngrams may be named and loaded from files
 and used when required.  The LISP function @code{load_ngram}
-takes a name and a filename as argument and loads the Ngram 
+takes a name and a filename as argument and loads the Ngram
 from that file.  For an example of its use once loaded see
-@file{src/modules/base/pos.cc} or 
+@file{src/modules/base/pos.cc} or
 @file{src/modules/base/phrasify.cc}.
 
 @node Viterbi decoder, Linear regression, Ngrams, Tools
@@ -6846,13 +6852,13 @@
 The previous word to the first item in the named relation (only used
 when ngrams are the "language model").
 @item pp_word
-The previous previous word to the first item in the named relation 
+The previous previous word to the first item in the named relation
 (only used when ngrams are the "language model").
 @item ngramname
-the name of an ngram (loaded by @code{ngram.load}) to be used 
+the name of an ngram (loaded by @code{ngram.load}) to be used
 as a "language model".
 @item wfstmname
-the name of a WFST (loaded by @code{wfst.load}) to be used 
+the name of a WFST (loaded by @code{wfst.load}) to be used
 as a "language model", this is ignored if an @code{ngramname} is also
 specified.
 @item debug
@@ -6869,8 +6875,8 @@
 probabilities (for each candidiate as given what is the probability
 of the observation, rather than the probability of the candidate
 given the observation).  These can be calculated for the
-probabilties candidate given the observation divided by the 
-probability of the candidate in isolation.  
+probabilties candidate given the observation divided by the
+probability of the candidate in isolation.
 
 For the sake of simplicity let us assume we have a lexicon of words to
 distribution of part of speech tags with reverse probabilities.  And an
@@ -6881,7 +6887,7 @@
  ;; select the appropriate lexicon
  (lex.select 'pos_lex)
  ;; return the list of cands with rprobs
- (cadr 
+ (cadr
   (lex.lookup (item.name w) nil)))
 @end lisp
 The returned candidate list would look somthing like
@@ -6945,7 +6951,7 @@
 Because our research interests tend towards creating statistical
 models trained from real speech data, Festival offers various support
 for extracting information from speech databases, in a way suitable
-for building models. 
+for building models.
 
 Models for accent prediction, F0 generation, duration, vowel
 reduction, homograph disambiguation, phrase break assignment and
@@ -6982,7 +6988,7 @@
 labelling but of course you wouldn't be able to extract as much
 information from the result.
 
-In our databases these labels are in Entropic's Xlabel format, 
+In our databases these labels are in Entropic's Xlabel format,
 though it is fairly easy to convert any reasonable format.
 
 @table @emph
@@ -7013,18 +7019,18 @@
 @item Phrase
 @cindex IntEvent labelling
 This could just mark the last non-silence phone in each utterance, or
-before any silence phones in the whole utterance. 
+before any silence phones in the whole utterance.
 @item Target
 @cindex Target labelling
 This can be automatically derived from an F0 file and the Segment files.
 A marking of the mean F0 in each voiced phone seem to give adequate
-results.  
+results.
 @end table
 Once these files are created an utterance file can be automatically
 created from the above data.   Note it is pretty easy to get the
-streams right but getting the relations between the streams is 
+streams right but getting the relations between the streams is
 much harder.  Firstly labelling is rarely accurate and small windows of
-error must be allowed to ensure things line up properly.  The second 
+error must be allowed to ensure things line up properly.  The second
 problem is that some label files identify point type information
 (IntEvent and Target) while others identify segments (e.g. Segment,
 Words etc.).  Relations have to know this in order to get it right.
@@ -7035,7 +7041,7 @@
 @cindex creating utterances
 The script @file{festival/examples/make_utts} is an example Festival script
 which automatically builds the utterance files from the above labelled
-files. 
+files.
 
 The script, by default assumes, a hierarchy in an database directory
 of the following form.  Under a directory @file{festival/} where
@@ -7135,11 +7141,11 @@
 @lisp
 (
 ( duration float )
-( name # @@ @@@@ a aa ai au b ch d dh e e@@ ei f g h i i@@ ii jh k l m n 
+( name # @@ @@@@ a aa ai au b ch d dh e e@@ ei f g h i i@@ ii jh k l m n
     ng o oi oo ou p r s sh t th u u@@ uh uu v w y z zh )
-( n.name # @@ @@@@ a aa ai au b ch d dh e e@@ ei f g h i i@@ ii jh k l m n 
+( n.name # @@ @@@@ a aa ai au b ch d dh e e@@ ei f g h i i@@ ii jh k l m n
     ng o oi oo ou p r s sh t th u u@@ uh uu v w y z zh )
-( p.name # @@ @@@@ a aa ai au b ch d dh e e@@ ei f g h i i@@ ii jh k l m n 
+( p.name # @@ @@@@ a aa ai au b ch d dh e e@@ ei f g h i i@@ ii jh k l m n
     ng o oi oo ou p r s sh t th u u@@ uh uu v w y z zh )
 ( R:SylStructure.parent.position_type 0 final initial mid single )
 ( pos_in_syl float )
@@ -7164,7 +7170,7 @@
 feature files by the process described in the previous section.  From a
 list of file ids select, say, 80% of them, as training data and cat them
 into a single datafile.  The remaining 20% may be catted together as
-test data.  
+test data.
 
 To build a tree use a command like
 @example
@@ -7193,10 +7199,10 @@
 these processes.
 
 @node Programming, API, Building models from databases, Top
-@chapter Programming 
+@chapter Programming
 
 @cindex programming
-This chapter covers aspects of programming within the Festival 
+This chapter covers aspects of programming within the Festival
 environment, creating new modules, and modifying existing ones.
 It describes basic Classes available and gives some particular
 examples of things you may wish to add.
@@ -7211,7 +7217,7 @@
 
 @cindex source
 The ultimate authority on what happens in the system lies
-in the source code itself.  No matter how hard we try, and how 
+in the source code itself.  No matter how hard we try, and how
 automatic we make it, the source code will always be ahead
 of the documentation.  Thus if you are going to be using Festival in
 a serious way, familiarity with the source is essential.
@@ -7221,11 +7227,11 @@
 Edinburgh Speech Tool Library offers the basic utterance structure,
 waveform file access, and other various useful low-level functions
 which we share between different speech systems in our work.
-@xref{Top, , Overview, speechtools, 
+@xref{Top, , Overview, speechtools,
       Edinburgh Speech Tools Library Manual}.
 
 @cindex directory structure
-The directory structure for the Festival distribution reflects 
+The directory structure for the Festival distribution reflects
 the conceptual split in the code.
 
 @table @file
@@ -7293,7 +7299,7 @@
 the other parts are just there to make module writing easier.
 @item ./src/modules/base/
 This contains some basic simple modules that weren't quite big enough
-to deserve their own directory.  Most importantly it includes the 
+to deserve their own directory.  Most importantly it includes the
 @code{Initialize} module called by many synthesis methods which sets
 up an utterance structure and loads in initial values.  This directory
 also contains phrasing, part of speech, and word (syllable and phone
@@ -7301,7 +7307,7 @@
 @item ./src/modules/Lexicon/
 This is not really a module in the true sense (the @code{Word} module
 is the main user of this).  This contains functions to construct, compile,
-and access lexicons (entries of words, part of speech and 
+and access lexicons (entries of words, part of speech and
 pronunciations).  This also contains a letter-to-sound rule system.
 @item ./src/modules/Intonation/
 This contains various intonation systems, from the very simple
@@ -7322,7 +7328,7 @@
 @item ./src/modules/donovan/
 An LPC based diphone synthesizer.  Very small and neat.
 @item ./src/modules/rxp/
-The Festival/Scheme front end to 
+The Festival/Scheme front end to
 An XML parser written by Richard Tobin from University of Edinburgh's
 Language Technology Group.. rxp is now part of the speech tools
 rather than just Festival.
@@ -7344,9 +7350,9 @@
 techniques may be interested in integration using these new modules.
 They may be updated before the next full release of Festival.
 @item ./src/modules/*
-Other optional directories may be contained here containing 
+Other optional directories may be contained here containing
 various research modules not yet part of the standard distribution.
-See below for descriptions of how to add modules to the basic 
+See below for descriptions of how to add modules to the basic
 system.
 @end table
 One intended use of Festival is offer a software system where
@@ -7385,7 +7391,7 @@
 #include <festival.h>
 
 @end lisp
-The module itself must be declared in a fixed form.  That is 
+The module itself must be declared in a fixed form.  That is
 receiving a single LISP form (an utterance) as an argument
 and returning that LISP form at the end.  Thus our definition
 will start
@@ -7407,7 +7413,7 @@
 modifications we want to make to durations between speakers).  Therefore
 the phone and average duration information is held in a Scheme variable
 for easy setting at run time.  To use the information in our C++
-domain we must get that value from the Scheme domain.  This is 
+domain we must get that value from the Scheme domain.  This is
 done with the following statement.
 @lisp
     ph_avgs = siod_get_lval("phoneme_averages","no phoneme durations");
@@ -7416,7 +7422,7 @@
 a variable which has been set to an assoc list of phone and average
 duration before this module is called.  See the
 variable @code{phone_durations} in @file{lib/mrpa_durs.scm} for
-the format.  The second argument to @code{siod_get_lval}. is an 
+the format.  The second argument to @code{siod_get_lval}. is an
 error message to be printed if the variable @code{phone_averages}
 is not set.  If the second argument to @code{siod_get_lval} is
 @code{NULL} then no error is given and if the variable is unset
@@ -7431,7 +7437,7 @@
 We can lookup the average duration of the current segment name
 using the function @code{siod_assoc_str}.  As arguments, it
 takes the segment name @code{s->name()} and the assoc list of
-phones and duration.  
+phones and duration.
 @lisp
         ldur = siod_assoc_str(s->name(),ph_avgs);
 @end lisp
@@ -7452,7 +7458,7 @@
 @end lisp
 If this phone is in an accented syllable we wish to increase its
 duration by a factor of 1.5.  To find out if it is accented
-we use the feature system to find the syllable this phone is 
+we use the feature system to find the syllable this phone is
 part of and find out if that syllable is accented.
 @lisp
         if (ffeature(s,"R:SylStructure.parent.accented") == 1)
@@ -7467,7 +7473,7 @@
     @}
 @end lisp
 Finally we return the utterance from the function.
-@lisp 
+@lisp
     return utt;
 @}
 @end lisp
@@ -7483,7 +7489,7 @@
 
 In @file{./src/Duration/} the function @code{festival_Duration_init()}
 is at the end of the file @file{dur_aux.cc}.  Thus we can add our
-new modules declaration at the end of that function.  But first 
+new modules declaration at the end of that function.  But first
 we must declare the C++ function in that file.  Thus above
 that function we would add
 @lisp
@@ -7503,7 +7509,7 @@
 will be properly linked in and available for use.
 
 Of course we are not quite finished.  We still have to say when our
-new duration module should be called.  When we set 
+new duration module should be called.  When we set
 @lisp
    (Parameter.set 'Duration_Method Duration_Simple)
 @end lisp
@@ -7583,7 +7589,7 @@
 properly added to the library.  Following the other examples will ensure
 your code is integrated properly.
 
-We'll just skip over the bit where you extract the information 
+We'll just skip over the bit where you extract the information
 from the utterance structure and synthesize the waveform
 (see @file{donovan/donovan.cc} or @file{diphone/diphone.cc}
 for examples).
@@ -7610,7 +7616,7 @@
 static LISP utt_rtsynth(LISP utt)
 @{
     EST_Utterance *u = get_c_utt(utt);
-    // Do format synthesis 
+    // Do format synthesis
     return utt;
 @}
 
@@ -7643,7 +7649,7 @@
 (and C++) domain.
 
 Like example 2 we are assuming this is done in a new directory.
-Suppose you have a new object called @code{Widget} that can 
+Suppose you have a new object called @code{Widget} that can
 transduce a string into some other string (with some optional
 continuous parameter).  Thus, here we create a new file @file{widget.cc}
 like this
@@ -7682,7 +7688,7 @@
    return NIL;  // for compilers that get confused
 @}
 @end lisp
-Note that the function @code{siod} constructs a LISP object from 
+Note that the function @code{siod} constructs a LISP object from
 a @code{widget}, the class register macro defines that for you.
 Also note that when giving an object to a @code{LISP} object it then
 owns the object and is responsible for deleting it when garbage
@@ -7714,7 +7720,7 @@
 
     return strintern(answer);
 @}
-@end lisp   
+@end lisp
 The function @code{widget}, defined by the registration macros, takes
 a @code{LISP} object and returns a pointer to the @code{widget} inside
 it.  If the @code{LISP} object does not contain a @code{widget} an
@@ -7735,7 +7741,7 @@
 @end lisp
 
 In your @file{Makefile} for this directory you'll need to add
-the include directory where @file{widget.h} is, if it is not 
+the include directory where @file{widget.h} is, if it is not
 contained within the directory itself.  This is done through
 the make variable @code{LOCAL_INCLUDES} as
 @lisp
@@ -7751,7 +7757,7 @@
 @chapter API
 
 If you wish to use Festival within some other application there are
-a number of possible interfaces.  
+a number of possible interfaces.
 
 @menu
 * Scheme API::           Programming in Scheme
@@ -7773,7 +7779,7 @@
 depend on the Scheme interpreter.
 
 Scheme commands (as s-expressions) may be simply written in files and
-interpreted by Festival, either by specification as arguments on 
+interpreted by Festival, either by specification as arguments on
 the command line, in the interactive interpreter, or through standard
 input as a pipe.  Suppose we have a file @file{hello.scm} containing
 
@@ -7792,7 +7798,7 @@
 nil
 @end lisp
 Or we can execute the commands in the file directly from the
-shell command line 
+shell command line
 @lisp
 unix$ festival -b hello.scm
 @end lisp
@@ -7864,7 +7870,7 @@
 Festival to run as a server and allow client programs to access
 it.  Basically the server offers a new command interpreter for
 each client that attaches to it.  The server is forked for each
-client but this is much faster than having to wait for a 
+client but this is much faster than having to wait for a
 Festival process to start from scratch.  Also the server can
 run on a bigger machine, offering much faster synthesis.
 
@@ -7926,7 +7932,7 @@
 set up time, thus restricting calls to only those that
 @file{festival_client} @code{--ttw} uses.
 @lisp
-(set_server_safe_functions 
+(set_server_safe_functions
         '(tts_return_to_client tts_text tts_textall Parameter.set))
 @end lisp
 
@@ -7940,7 +7946,7 @@
 @code{adam.cstr.ed.ac.uk}.  This may be done by adding the following two
 commands to a file e.g. @code{server.scm}
 @lisp
-(set! server_deny_list '("holmes\\.cstr\\.ed\\.ac\\.uk" 
+(set! server_deny_list '("holmes\\.cstr\\.ed\\.ac\\.uk"
                          "adam\\.cstr\\.ed\\.ac\\.uk"))
 (set! server_access_list '("[^\\.]*\\.cstr\\.ed\\.ac\\.uk"))
 @end lisp
@@ -7977,7 +7983,7 @@
 @item --output FILENAME
 If a waveform is to be synchronously returned, it will be saved in
 @var{FILENAME}.   The @code{--ttw} option uses this as does the
-use of the Festival command @code{utt.send.wave.client}.  If 
+use of the Festival command @code{utt.send.wave.client}.  If
 an output waveform file is received by @file{festival_client}
 and no output file has been given the waveform is discarded with
 an error message.
@@ -7986,7 +7992,7 @@
 on the client call.  @var{PASSWD} is sent plus a newline
 before any other communication takes places.  If this isn't
 specified and a passwd is required, you must enter that first,
-if the @code{--ttw} option is used, a passwd is required and 
+if the @code{--ttw} option is used, a passwd is required and
 none specified access will be denied.
 @item --prolog FILE
 @var{FILE} is assumed to be contain Festival commands and its contents
@@ -7996,7 +8002,7 @@
 server.
 @item --otype OUTPUTTYPE
 If an output waveform file is to be used this specified the output type
-of the file.  The default is @code{nist}, but, @code{ulaw},
+of the file.  The default is @code{nist}, but @code{alaw},
 @code{riff}, @code{ulaw} and others as supported by the Edinburgh
 Speech Tools Library are valid.  You may use raw too but note that
 Festival may return waveforms of various sampling rates depending on the
@@ -8030,7 +8036,7 @@
 in separated waveforms.  Using @code{--aucommand} each waveform my
 be played locally, and when @file{festival_client} is interrupted
 the sound will stop.  Getting the client to connect to an audio
-server elsewhere means the sound will not necessarily stop when 
+server elsewhere means the sound will not necessarily stop when
 the @file{festival_client} process is stopped.
 @item --withlisp
 With each command being sent to Festival a Lisp return value is
@@ -8040,7 +8046,7 @@
 otherwise this information is discarded.
 @end table
 
-A typical example use of @file{festival_client} is 
+A typical example use of @file{festival_client} is
 @example
 festival_client --async --ttw --aucommand 'na_play $FILE' fred.txt
 @end example
@@ -8101,7 +8107,7 @@
 As well as offerening an interface through Scheme and the shell some
 users may also wish to embedd Festival within their own C++ programs.
 A number of simply to use high level functions are available for such
-uses.  
+uses.
 
 In order to use Festival you must include
 @file{festival/src/include/festival.h} which in turn will include the
@@ -8198,7 +8204,7 @@
 At present the JSAPI talks to a Festival server elsewhere rather than
 as part of the Java process itself.
 
-A simple (Pure) Java festival client is given 
+A simple (Pure) Java festival client is given
 @file{festival/src/modules/java/cstr/festival/Client.java} with a
 wraparound script in @file{festival/bin/festival_client_java}.
 
@@ -8317,7 +8323,7 @@
 @cindex singing
 As an interesting example a @file{singing-mode} is included.  This
 offers an XML based mode for specifying songs, both notes and duration.
-This work was done as a student project by Dominic Mazzoni.  A 
+This work was done as a student project by Dominic Mazzoni.  A
 number of examples are provided in @file{examples/songs}.  This
 may be run as
 @lisp
@@ -8326,7 +8332,7 @@
 Each note can be given a note and a beat value
 @example
 <?xml version="1.0"?>
-<!DOCTYPE SINGING PUBLIC "-//SINGING//DTD SINGING mark up//EN" 
+<!DOCTYPE SINGING PUBLIC "-//SINGING//DTD SINGING mark up//EN"
       "Singing.v0_1.dtd"
 []>
 <SINGING BPM="30">
@@ -8423,15 +8429,15 @@
 using linear regression", @emph{ICSLP96}, vol. 3, pp 1385-1388,
 Philadelphia, PA. 1996.
 @item black97b
-Black, A, and Taylor, P. "Assigning Phrase Breaks from Part-of-Speech 
+Black, A, and Taylor, P. "Assigning Phrase Breaks from Part-of-Speech
 Sequences", @emph{Eurospeech97}, Rhodes, Greece, 1997.
 @item black97c
-Black, A, and Taylor, P. "Automatically clustering similar units for 
+Black, A, and Taylor, P. "Automatically clustering similar units for
 unit selection in speech synthesis", @emph{Eurospeech97}, Rhodes, Greece,
 1997.
 @item black98
 Black, A., Lenzo, K. and Pagel, V., "Issues in building general
-letter to sound rules.", 3rd ESCA Workshop on Speech Synthesis, 
+letter to sound rules.", 3rd ESCA Workshop on Speech Synthesis,
 Jenolan Caves, Australia, 1998.
 @item black99
 Black, A., and Lenzo, K., "Building Voices in the Festival Speech
@@ -8445,8 +8451,8 @@
 Campbell, N. and Isard, S. "Segment durations in a syllable frame",
 @emph{Journal of Phonetics}, 19:1 37-47, 1991.
 @item DeRose88
-DeRose, S. "Grammatical category disambiguation by statistical 
-optimization". @emph{Computational Linguistics}, 14:31-39, 1988. 
+DeRose, S. "Grammatical category disambiguation by statistical
+optimization". @emph{Computational Linguistics}, 14:31-39, 1988.
 @item dusterhoff97
 Dusterhoff, K. and Black, A. "Generating F0 contours for speech
 synthesis using the Tilt intonation theory" @emph{Proceedings of ESCA
@@ -8456,7 +8462,7 @@
 Acedemic Publishers, 1997.
 @item hunt89
 Hunt, M., Zwierynski, D. and Carr, R. "Issues in high quality LPC
-analysis and synthesis", @emph{Eurospeech89}, vol. 2, pp 348-351, 
+analysis and synthesis", @emph{Eurospeech89}, vol. 2, pp 348-351,
 Paris, France. 1989.
 @item jilka96
 Jilka M. @emph{Regelbasierte Generierung natuerlich klingender
@@ -8475,7 +8481,7 @@
 Morphology: practical mechanisms for the English Lexicon}, MIT Press,
 Cambridge, Mass.
 @item vansanten96
-van Santen, J., Sproat, R., Olive, J. and Hirschberg, J. eds, 
+van Santen, J., Sproat, R., Olive, J. and Hirschberg, J. eds,
 "Progress in Speech Synthesis," Springer Verlag, 1996.
 @item silverman92
 Silverman K., Beckman M., Pitrelli, J., Ostendorf, M., Wightman, C.,
@@ -8504,7 +8510,7 @@
 @url{http://www.w3.org/pub/WWW/TR/WD-xml-lang-970630.html}
 @item yarowsky96
 Yarowsky, D., "Homograph disambiguation in text-to-speech synthesis",
-in "Progress in Speech Synthesis," eds. van Santen, J., Sproat, R., 
+in "Progress in Speech Synthesis," eds. van Santen, J., Sproat, R.,
 Olive, J. and Hirschberg, J. pp 157-172. Springer Verlag, 1996.
 @end table
 
@@ -8520,7 +8526,7 @@
 while others are simple features on an item (e.g. @code{pos}).  Note
 that functional feature take precidence over simple features, so
 accessing and feature called "X" will always use the function called "X"
-even if a the simple feature call "X" exists on the item.  
+even if a the simple feature call "X" exists on the item.
 
 Unlike previous versions there are no features that are builtin on all
 items except @code{addr} (reintroduced in 1.3.1) which returns a unique
@@ -8544,7 +8550,7 @@
 generated from the documentation strings of the variables as they are
 defined within the system, so has some chance in being up-to-date.
 
-Cross references to sections elsewhere int he manual are given where 
+Cross references to sections elsewhere int he manual are given where
 appropriate.
 
 @include festvars.texi
@@ -8561,7 +8567,7 @@
 are little used in Festival and may not work fully, particularly, the
 arrays.
 
-Cross references to sections elsewhere in the manual are given where 
+Cross references to sections elsewhere in the manual are given where
 appropriate.
 
 @include festfunc.texi
--- a/doc/Makefile
+++ b/doc/Makefile
@@ -34,29 +34,12 @@
 DIRNAME=doc
 
 DOCNAME=festival
-DSSL_SANE_DB=$(EST)/doc/sane_to_docbook.dsl
-DSSSL_HTML=$(EST)/doc/cstr.dssl
-DSSSL=$(DSSSL_HTML)
 
-# Temporarilly we explicitly list the programs which have been documented
-
-MAIN_TO_DOCUMENT=
-
-EXAMPLE_TO_DOCUMENT=
-
-FESTIVAL=$(TOP)/bin/festival --libdir $(TOP)/lib
-
-# Include some of EST documentation.
-DOCXX_EXTRA_FILES = 
-
-DOCXXIMAGES = edcrest.gif cstr.gif \
-	est.jpg est_small.jpg \
-	festival.jpg festival_small.jpg festival_tiny.jpg
-DOCXXFILES=  classHeader.inc hierHeader.inc indexHeader.inc \
-	     banner.inc $(DOCXXIMAGES)
+FESTIVAL=$(TOP)/src/main/festival --libdir $(TOP)/lib --datadir $(TOP)/lib
 
 MANPAGES = festival.head festival.tail \
-           festival_client.head festival_client.tail
+           festival_client.head festival_client.tail \
+		   text2wave.head text2wave.tail
 
 #SGMLFILES = festival.sgml \
 #	introductory.sgml basics.sgml core.sgml advanced.sgml programming.sgml
@@ -64,17 +47,16 @@
 FILES=Makefile $(MANPAGES) festival.texi $(SGMLFILES) refcard.tex  $(DOCXXFILES)
 LOCAL_CLEAN = *.aux *.cp *.fn *.ky *.log *.pg *.toc *.tp *.vr
 
-ALL = festival.1 festival_client.1
+ALL = festival.1 festival_client.1 text2wave.1
 
 include $(TOP)/config/common_make_rules
-include $(EST)/config/rules/doc.mak
 
 %.1 : %.head %.options %.tail 
 	cat $^ >$@
 %.options : $(TOP)/src/main/%
-	$(TOP)/bin/$* -man_options >$@
+	$(TOP)/src/main/$* -man_options |sed 's#--#\\-\\-#' >$@
 %.options : $(TOP)/src/main/%.exe
-	$(TOP)/bin/$* -man_options >$@
+	$(TOP)/src/main/$* -man_options >$@
 
 festival.info: festival.texi festfunc.texi festvars.texi festfeat.texi
 	@ if [ ! -d info ] ; \
@@ -83,19 +65,19 @@
 	@ cp festfunc.texi info/festfunc.texi
 	@ cp festvars.texi info/festvars.texi
 	@ cp festfeat.texi info/festfeat.texi
-	( cd info; makeinfo festival.texi )
+	( cd info; makeinfo --output festival.info festival.texi )
 	@ rm info/*.texi
-# texi2html is available from http://wwwcn.cern.ch/dci/texi2html/
+
 festival.html: festival.texi festfunc.texi festvars.texi
 	@ if [ ! -d html ] ; \
           then mkdir -p html ; fi
-	(cd html; texi2html -number -split_chapter ../festival.texi)
+	(cd html; makeinfo --html --ifinfo  ../festival.texi)
 # give the html files background color of white
-	@ for i in html/*.html ; \
-	  do \
-	    sed 's/<BODY>/<BODY bgcolor="#ffffff">/' $$i >ttt.html; \
-	    mv ttt.html $$i ; \
-	  done
+	#@ for i in html/*.html ; \
+	#  do \
+	#    sed 's/<BODY>/<BODY bgcolor="#ffffff">/' $$i >ttt.html; \
+	#    mv ttt.html $$i ; \
+	#  done
 festival.ps: festival.dvi
 	dvips -f festival.dvi >festival.ps
 festival.dvi: festival.texi festfunc.texi festvars.texi
@@ -104,8 +86,8 @@
 	tex festival.texi
 doc:	festival.ps festival.html festival.info
 
-festfunc.texi festvars.texi festfeat.texi: $(TOP)/src/main/festival
-	echo "(load_library \"festdoc.scm\") (make-doc)" | $(FESTIVAL)
+festfunc.texi festvars.texi festfeat.texi: $(TOP)/src/main/festival doc.scm
+	$(FESTIVAL) < doc.scm
 
 refcard.dvi:	refcard.tex
 	latex refcard.tex
--- /dev/null
+++ b/doc/cstr.dssl
@@ -0,0 +1,831 @@
+<!DOCTYPE style-sheet PUBLIC "-//James Clark//DTD DSSSL Style Sheet//EN" [
+<!ENTITY dbstyle SYSTEM "/usr/local/share/sgml/stylesheets/docbook/html/docbook.dsl" CDATA DSSSL>
+]>
+
+<style-sheet>
+<style-specification use="docbook">
+<style-specification-body>
+
+ ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+ ;;                                                                       ;;
+ ;; CSTR modifications to modular docbook stylesheets. me of this could   ;;
+ ;; perhaps be split into parameters and more parametarisable             ;;
+ ;; definitions replaceing ones from the standard style sheets.           ;;
+ ;;                                                                       ;;
+ ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+
+(define html-index #t )
+
+(define %shade-verbatim% #t)
+
+(define %missing-link-error% #f)
+
+(define image-directory "images_gen")
+
+(define $generate-chapter-toc$ (lambda () #t))
+(define %generate-book-toc% #f)
+
+(define ($shade-verbatim-attr$)
+  ;; Attributes used to create a shaded verbatim environment.
+  (list
+   (list "BORDER" "0")
+   (list "WIDTH" "80%")))
+
+(define ($shade-verbatim-cell-attr$)
+  ;; Attributes used to create a shaded verbatim environment.
+  (list
+   ))
+
+(define ($shade-verbatim-text-attr$)
+  ;; Attributes used to create a shaded verbatim environment.
+  (list
+   (list "style" "white-space:pre; display:block;")
+   (list "face" "monospace")
+   (list "color" "#000000")
+   ))
+
+(define %body-attr% 
+  ;; What attributes should be hung off of BODY?
+  (list
+   (list "BGCOLOR" "#FFFFFF")
+   (list "BACKGROUND" "../cstr_background.jpg")
+   (list "TEXT" "#0000AA")
+	)
+   )
+
+(define $line-annotation-attr$
+  ;; font attributes for line annotation
+  (list
+   (list "color" "#A00080")
+   (list "size" "-1")
+   (list "face" "sans")
+   (list "weight" "bold")
+   )
+  )
+
+(element lineannotation
+	 (make element gi: "font"
+	       attributes: $line-annotation-attr$
+	       (process-children))
+	 )
+
+(element screen 
+	(make element gi: "DIV" attributes: '(("ALIGN" "CENTER"))
+		($verbatim-display$ %number-screen-lines%)
+		)
+	)
+
+(element programlisting
+	(make element gi: "DIV" attributes: '(("ALIGN" "CENTER"))
+		($verbatim-display$ %number-programlisting-lines%)
+		)
+	)
+
+(element sidebar 
+	 (make element gi: "div"
+	       (make empty-element gi: "br"
+		     attributes: (list
+				  (list "clear" "right")
+				  )
+		     )
+	       (make element gi: "TABLE"
+		     attributes: (list
+				  (list "CLASS" (gi))
+				  (list "BORDER" "1")
+				  (list "CELLPADDING" "5"))
+		     (make element gi: "TR"
+			   (make element gi: "TD"
+				 ($semiformal-object$))))
+	       )
+	 )
+
+(define (default-header-nav-tbl-ff elemnode prev next prevsib nextsib)
+  (let* ((r1? (nav-banner? elemnode))
+	 (r1-sosofo (make element gi: "TR"
+			  (make element gi: "TH"
+				attributes: (list
+					     (list "COLSPAN" "5")
+					     (list "ALIGN" "center")
+					     (list "VALIGN" "bottom"))
+				(nav-banner elemnode))))
+	 (r2? (or (not (node-list-empty? prev))
+		  (not (node-list-empty? next))
+		  (not (node-list-empty? prevsib))
+		  (not (node-list-empty? nextsib))
+		  (nav-context? elemnode)))
+	 (r2-sosofo (make element gi: "TR"
+			  (make element gi: "TD"
+				attributes: (list
+					     (list "WIDTH" "10%")
+					     (list "ALIGN" "left")
+					     (list "VALIGN" "top"))
+				(if (node-list-empty? prev)
+				    (make entity-ref name: "nbsp")
+				    (make element gi: "A"
+					  attributes: (list
+						       (list "HREF" 
+							     (href-to 
+							      prev)))
+					  (gentext-nav-prev prev))))
+			  (make element gi: "TD"
+				attributes: (list
+					     (list "WIDTH" "10%")
+					     (list "ALIGN" "left")
+					     (list "VALIGN" "top"))
+				(if (node-list-empty? prevsib)
+				    (make entity-ref name: "nbsp")
+				    (make element gi: "A"
+					  attributes: (list
+						       (list "HREF" 
+							     (href-to 
+							      prevsib)))
+					  (gentext-nav-prevsib prevsib))))
+			  (make element gi: "TD"
+				attributes: (list
+					     (list "WIDTH" "60%")
+					     (list "ALIGN" "center")
+					     (list "VALIGN" "bottom"))
+				(nav-context elemnode))
+			  (make element gi: "TD"
+				attributes: (list
+					     (list "WIDTH" "10%")
+					     (list "ALIGN" "right")
+					     (list "VALIGN" "top"))
+				(if (node-list-empty? nextsib)
+				    (make entity-ref name: "nbsp")
+				    (make element gi: "A"
+					  attributes: (list
+						       (list "HREF" 
+							     (href-to
+							      nextsib)))
+					  (gentext-nav-nextsib nextsib))))
+			  (make element gi: "TD"
+				attributes: (list
+					     (list "WIDTH" "10%")
+					     (list "ALIGN" "right")
+					     (list "VALIGN" "top"))
+				(if (node-list-empty? next)
+				    (make entity-ref name: "nbsp")
+				    (make element gi: "A"
+					  attributes: (list
+						       (list "HREF" 
+							     (href-to
+							      next)))
+					  (gentext-nav-next next)))))))
+    (if (or r1? r2?)
+	(make element gi: "DIV"
+	      attributes: '(("CLASS" "NAVHEADER"))
+	  (make element gi: "TABLE"
+		attributes: (list
+			     (list "WIDTH" %gentext-nav-tblwidth%)
+			     (list "BORDER" "0")
+			     (list "CELLPADDING" "0")
+			     (list "CELLSPACING" "0"))
+		(if r1? r1-sosofo (empty-sosofo))
+		(if r2? r2-sosofo (empty-sosofo)))
+	  (make empty-element gi: "HR"
+		attributes: (list
+			     (list "ALIGN" "LEFT")
+			     (list "WIDTH" %gentext-nav-tblwidth%)))
+	  (make empty-element gi: "HR"
+		attributes: (list
+			     (list "ALIGN" "LEFT")
+			     (list "WIDTH" %gentext-nav-tblwidth%))))
+	(empty-sosofo))))
+
+(define (default-header-nav-tbl-noff elemnode prev next prevsib nextsib)
+  (let* ((r1? (nav-banner? elemnode))
+	 (limg (entity-text "title-left-image"))
+	 (rimg (entity-text "title-right-image"))
+	 (r1-sosofo (make element gi: "TR"
+			  (if limg 
+			      (make element gi: "TH"
+				    attributes: (list
+						 (list "ROWSPAN" "2")
+						 (list "ALIGN" "left"))
+				    (make empty-element gi: "IMG"
+					  attributes: (list
+						       (list "SRC" limg)
+						       )
+					))
+			      (empty-sosofo)
+			      )
+			  (make element gi: "TH"
+				attributes: (list
+					     (list "COLSPAN" "3")
+					     (list "ALIGN" "center"))
+				(nav-banner elemnode))
+			  (if rimg 
+			      (make element gi: "TH"
+				    attributes: (list
+						 (list "ROWSPAN" "2")
+						 (list "ALIGN" "right"))
+				    (make empty-element gi: "IMG"
+					  attributes: (list
+						       (list "SRC" rimg)
+						       )
+					))
+			      (empty-sosofo)
+			      )
+			))
+	 (r2? (or (not (node-list-empty? prev))
+		  (not (node-list-empty? next))
+		  (nav-context? elemnode)))
+	 (r2-sosofo (make element gi: "TR"
+			  (make element gi: "TD"
+				attributes: (list
+					     (list "WIDTH" "10%")
+					     (list "ALIGN" "left")
+					     (list "VALIGN" "bottom"))
+				(if (node-list-empty? prev)
+				    (make entity-ref name: "nbsp")
+				    (make element gi: "A"
+					  attributes: (list
+						       (list "HREF" 
+							     (href-to 
+							      prev)))
+					  (gentext-nav-prev prev))))
+			  (make element gi: "TD"
+				attributes: (list
+					     (list "WIDTH" "80%")
+					     (list "ALIGN" "center")
+					     (list "VALIGN" "bottom"))
+				(nav-context elemnode))
+			  (make element gi: "TD"
+				attributes: (list
+					     (list "WIDTH" "10%")
+					     (list "ALIGN" "right")
+					     (list "VALIGN" "bottom"))
+				(if (node-list-empty? next)
+				    (make entity-ref name: "nbsp")
+				    (make element gi: "A"
+					  attributes: (list
+						       (list "HREF" 
+							     (href-to
+							      next)))
+					  (gentext-nav-next next)))))))
+    (if (or r1? r2?)
+	(make element gi: "DIV"
+	      attributes: '(("CLASS" "NAVHEADER"))
+	  (make element gi: "TABLE"
+		attributes: (list
+			     (list "WIDTH" %gentext-nav-tblwidth%)
+			     (list "BORDER" "0")
+			     (list "CELLPADDING" "0")
+			     (list "CELLSPACING" "0"))
+		(if r1? r1-sosofo (empty-sosofo))
+		(if r2? r2-sosofo (empty-sosofo)))
+	  (make empty-element gi: "HR"
+		attributes: (list
+			     (list "ALIGN" "LEFT")
+			     (list "WIDTH" %gentext-nav-tblwidth%))))
+	(empty-sosofo))))
+
+
+(define ($verbatim-display$ line-numbers?)
+  (let ((content (make element gi: "font"
+				attributes: ($shade-verbatim-text-attr$)
+		       (if line-numbers?
+			   ($verbatim-content-with-linenumbers$)
+			   ($verbatim-content$)))))
+    (if %shade-verbatim%
+	(make element gi: "TABLE"
+	      attributes: ($shade-verbatim-attr$)
+	      (make element gi: "TR"
+		    (make element gi: "TD"
+			  attributes: ($shade-verbatim-cell-attr$)
+			  content
+				)))
+	content)))
+
+
+(define ($sect-toc$)
+  (let ((depth	(attribute-string "depth")))
+    ;; Called by the TITLE element so that it can come after the TITLE
+    (build-toc (ancestor-member (current-node) (section-element-list))
+	       (if depth
+		   (string->number depth)
+		   (toc-depth (ancestor-member (current-node) (section-element-list)))
+		   )
+	       #t))
+  )
+
+(define ($chapter-toc$)
+  (let ((depth	(attribute-string "depth")))
+  ;; Called by the TITLE element so that it can come after the TITLE
+  (build-toc (ancestor-member (current-node) (component-element-list))
+	       (if depth
+		   (string->number depth)
+		   (toc-depth (ancestor-member (current-node) (component-element-list)))
+		   )
+	     #t)))
+
+(element (SECT1 TOC)
+	 (make element gi: "DIV"
+	       (process-children)
+	       ($sect-toc$)
+	       )
+	 )
+
+(element (SECT2 TOC)
+	 (make element gi: "DIV"
+	       (process-children)
+	       ($sect-toc$)
+	       )
+	 )
+
+(element (SECT3 TOC)
+	 (make element gi: "DIV"
+	       (process-children)
+	       ($sect-toc$)
+	       )
+	 )
+
+(element (CHAPTER TOC)
+	 (make element gi: "DIV"
+	       (process-children)
+	       ($chapter-toc$)
+	       )
+	 )
+
+(element (BOOK TOC)
+	 (make element gi: "DIV"
+	       (process-children)
+	       ($chapter-toc$)
+	       )
+	 )
+
+;; Variable list
+
+(element variablelist
+  (make sequence
+	(make element gi: "blockquote"
+	      (make element gi: "table"
+		    attributes: '(("class" "parameters"))
+		    (process-children)))
+	(para-check 'restart)))
+
+(element (variablelist title)
+	 (make element gi: "tr"
+	       (make element gi: "th"
+		     attributes: '(("colspan" "2") ("align" "left"))
+		     (process-children))
+	       )
+	 )
+
+(element varlistentry
+  (let ((terms    (select-elements (children (current-node)) (normalize "term")))
+	(listitem (select-elements (children (current-node)) (normalize "listitem"))))
+    (make element gi: "tr"
+	  attributes: '(("valign" "top"))
+	  (make sequence
+		(make element gi: "th"
+		      attributes: '(("align" "right"))
+		      (if (attribute-string (normalize "id"))
+			  (make element gi: "A"
+				attributes: (list (list "NAME" (attribute-string (normalize "id"))))
+				(process-node-list terms))
+			  (process-node-list terms)))
+		(make element gi: "td"
+		      (process-node-list listitem)
+		      )
+		)
+	  )
+    )
+  )
+  
+(element (varlistentry term)
+  (make sequence
+    (process-children-trim)
+    (if (not (last-sibling?))
+	(literal ", ")
+	(literal ""))))
+
+(element (varlistentry listitem)
+	(process-children))
+
+
+;; by copy of the index building stuff.
+
+(define (htmlindexattr-inherited attr)
+  (if (inherited-attribute-string (normalize attr))
+      (make sequence
+	(make formatting-instruction data: attr)
+	(make formatting-instruction data: " ")
+	(make formatting-instruction data: (inherited-attribute-string 
+					    (normalize attr)))
+	(htmlnewline))
+      (empty-sosofo)))
+
+(mode htmlindex
+  ;; this mode is really just a hack to get at the root element
+  (root (process-children))
+
+  (default 
+    (if (node-list=? (current-node) (sgml-root-element))
+	(make entity
+	  system-id: (html-entity-file html-index-filename)
+	  (process-node-list (select-elements 
+			      (descendants (current-node))
+			      (normalize "indexterm"))))
+	(empty-sosofo)))
+
+  (element indexterm
+    (let* ((target (ancestor-member (current-node)
+				    (append (book-element-list)
+					    (division-element-list)
+					    (component-element-list)
+					    (section-element-list))))
+	   (title  (string-replace (element-title-string target) "&#13;" " ")))
+      (make sequence
+	(make formatting-instruction data: "INDEXTERM ")
+	(make formatting-instruction data: (href-to target))
+	(htmlnewline)
+
+	(make formatting-instruction data: "INDEXPOINT ")
+	(make formatting-instruction data: (href-to (current-node)))
+	(htmlnewline)
+
+	(make formatting-instruction data: "TITLE ")
+	(make formatting-instruction data: title)
+	(htmlnewline)
+
+	(htmlindexattr "scope")
+	(htmlindexattr "significance")
+	(htmlindexattr "class")
+	(htmlindexattr-inherited "id")
+	(htmlindexattr "startref")
+	
+	(if (attribute-string (normalize "zone"))
+	    (htmlindexzone (attribute-string (normalize "zone")))
+	    (empty-sosofo))
+
+	(process-children)
+
+	(make formatting-instruction data: "/INDEXTERM")
+	(htmlnewline))))
+		    
+  (element primary
+    (htmlindexterm))
+
+  (element secondary
+    (htmlindexterm))
+
+  (element tertiary
+    (htmlindexterm))
+
+  (element see
+    (htmlindexterm))
+
+  (element seealso
+    (htmlindexterm))
+)
+
+;; TeX processing support
+(define html-tex-filename
+	"TeX.formulae"
+	)
+
+(define (tex-graphic #!optional (nd (current-node)))
+  (let* ((format (attribute-string "format" nd))
+	 (fileref (attribute-string "fileref" nd))
+	 )
+    (if (equal? format (normalize "tex"))
+	(make sequence
+	      (make formatting-instruction data: "@Name ")
+	      (make formatting-instruction data: (string-append image-directory "/" fileref))
+	      (htmlnewline)
+	      (make formatting-instruction data: "@Start")
+	      (htmlnewline)
+	      (make formatting-instruction data: (data nd))
+	      (htmlnewline)
+	      (make formatting-instruction data: "@End")
+	      (htmlnewline)
+	      )
+	(empty-sosofo)
+	)
+    )
+  )
+
+(define ($img$ #!optional (nd (current-node)) (alt #f))
+  ;; This function now supports an extension to DocBook.  It's
+  ;; either a clever trick or an ugly hack, depending on your
+  ;; point of view, but it'll hold us until XLink is finalized
+  ;; and we can extend DocBook the "right" way.
+  ;;
+  ;; If the entity passed to GRAPHIC has the FORMAT
+  ;; "LINESPECIFIC", either because that's what's specified or
+  ;; because it's the notation of the supplied ENTITYREF, then
+  ;; the text of the entity is inserted literally (via Jade's
+  ;; read-entity external procedure).
+  ;;
+  (let* ((fileref   (attribute-string (normalize "fileref") nd))
+         (entityref (attribute-string (normalize "entityref") nd))
+         (format    (if (attribute-string (normalize "format") nd)
+                        (attribute-string (normalize "format") nd)
+                        (if entityref
+                            (entity-notation entityref)
+                            #f)))
+         (align     (attribute-string (normalize "align") nd)))
+    (if (or fileref entityref)
+        (if (equal? format (normalize "linespecific"))
+            (if fileref 
+                (include-file fileref)
+                (include-file (entity-generated-system-id entityref)))
+	    (if (equal? format (normalize "tex"))
+		(if fileref 
+		    ($graphic$ (string-append image-directory "/" fileref) format alt align)
+		    ($graphic$ (string-append image-directory "/" (system-id-filename entityref))
+			       format alt align))
+		(if fileref
+		    ($graphic$ fileref format alt align)
+		    ($graphic$ (system-id-filename entityref)
+			       format alt align)))
+	    )
+	(empty-sosofo)
+	)))
+
+(mode tex-graphics
+      ;; this mode is really just a hack to get at the root element
+      (root (process-children))
+      
+      (default 
+	(if (node-list=? (current-node) (sgml-root-element))
+	    (make entity
+		  system-id: (html-entity-file html-tex-filename)
+		  (process-node-list (select-elements 
+				      (descendants (current-node))
+				      (normalize "graphic")))
+		  (process-node-list (select-elements 
+				      (descendants (current-node))
+				      (normalize "inlinegraphic")))
+		  )
+	    (empty-sosofo)))
+      
+      (element graphic
+	       (tex-graphic)
+	       )
+
+      (element inlinegraphic
+	       (tex-graphic)
+	       )
+
+      )
+
+(root
+ (make sequence
+;   (literal
+;    (debug (node-property 'gi
+;                         (node-property 'document-element (current-node)))))
+;(define (docelem node)
+;  (node-propety 'document-element 
+;    (node-property 'grove-root node)))
+   (process-children)
+   (with-mode manifest
+     (process-children))
+   (if html-index
+       (with-mode htmlindex
+         (process-children))
+       (empty-sosofo))
+   (with-mode tex-graphics
+	      (process-children)
+	      )
+   )
+ )
+
+;; Sections can pass on role information
+
+(define ($section-body$)
+  (let* ((sect (current-node))
+	 (class (or (attribute-string "ROLE" sect)
+		    (gi sect)
+		    )
+		  )
+	 )
+    (make element gi: "DIV"
+	  attributes: (list (list "CLASS" class))
+	  ($section-separator$)
+	  ($section-title$)
+	  (if (equal? class "entry") 
+	      (make element gi: "blockquote"
+		    (process-children)
+		    )
+	      (process-children)
+	      )
+	  )
+    )
+  )
+
+(define ($section-title$)
+  (let* ((sect (current-node))
+	 (info (info-element))
+	 (subtitles (select-elements (children info) (normalize "subtitle")))
+	 (renderas (inherited-attribute-string (normalize "renderas") sect))
+	 (hlevel                          ;; the apparent section level;
+	  (if renderas                    ;; if not real section level,
+	      (string->number             ;;   then get the apparent level
+	       (substring renderas 4 5))  ;;   from "renderas",
+	      (SECTLEVEL)))               ;; else use the real level
+	 (h1elem
+	  (string-append "H" (number->string hlevel)))
+	 (h2elem
+	  (string-append "H" (number->string (+ hlevel 1))))
+	 (name (element-id))
+	 (isep (gentext-intra-label-sep (gi sect)))
+	 (nsep (gentext-label-title-sep (gi sect)))
+	 (role (attribute-string "ROLE" sect))
+	 (h1class (if role (string-append (gi sect) "" role) (gi sect)))
+	 )
+    (make sequence
+	      (make element gi: h1elem
+		    attributes: (list (list "CLASS" h1class))
+		    (make element gi: "A"
+			  attributes: (list (list "NAME" name))
+			  (if (string=? (element-label (current-node)) "")
+			      (empty-sosofo)
+			      (literal (element-label (current-node)) nsep))
+			  (element-title-sosofo sect)
+			  ))
+	  (if (node-list-empty? subtitles) 
+	      (empty-sosofo)
+	      (with-mode subtitle-mode
+			 (make element gi: h2elem
+			       attributes: (list (list "CLASS" (string-append h1class "-subtitle")))
+						 (process-node-list subtitles))))
+	      ($proc-section-info$ info))))
+
+
+(define %html-header-tags%
+  '(
+    ("link" ("rel" "stylesheet") ("type" "text/css") ("href" "cstrdoc.css"))
+    )
+  )
+
+
+(element synopsis
+	 (make element gi: "table"
+	       attributes: '(("cellspacing" "0")("cellpadding" "0") ("class" "synopsys"))
+	       (make element gi: "tr"
+		     (make sequence
+			   (make element gi: "td"
+				 attributes: '(("valign" "top"))
+				 (with-mode synopsis-table (process-matching-children '("synopsis" ("role" "type"))))
+				 )
+			   (make element gi: "td"
+				 attributes: '(("valign" "top"))
+				 (with-mode synopsis-table (process-matching-children '("synopsis" ("role" "name"))))
+				 )
+
+			   (with-mode synopsis-table-args (process-matching-children '("synopsis" ("role" "args"))))
+			   )
+		     )
+	       )
+	 )
+
+(mode synopsis-table-args
+      
+      (element synopsis 
+	       (let* ((role (attribute-string "role"))
+		      (children (children (current-node)))
+		      (start (if (node-list-empty? children)
+				 ""
+				 (data (node-list-first children))))
+		      )
+		 (if (and (string? start) (not (string=? start "")))
+		     (make sequence
+			   (make element gi: "td"
+				 attributes: '(("valign" "top"))
+				 (make element gi: "tt"
+				       (literal "(")
+				       )
+				 )
+			   (make element gi: "td"
+				 attributes: '(("valign" "top"))
+				 (make element gi: "tt"
+				       (if (and (equal? role "args") 
+						(string? start) 
+						(not (string=? start "")) 
+						(equal? (substring start 0 1) "(")
+						)
+					   (make sequence
+						 (literal (substring start 1 (string-length start)))
+						 (process-node-list (node-list-rest children))
+						 )
+					   (process-children)
+					   )
+				       )
+				 )
+			   )
+		     (empty-sosofo)
+		     )
+		 )
+	       )
+      )
+
+(mode synopsis-table
+      
+      (element synopsis 
+	       (make element gi: "tt"
+		     (let* ((role (attribute-string "role"))
+			    (children (children (current-node)))
+			    (start (if (node-list-empty? children)
+				       ""
+				       (data (node-list-first children))))
+			    )
+		       (if (and (equal? role "args") 
+				(string? start) 
+				(not (string=? start "")) 
+				(equal? (substring start 0 1) "(")
+				)
+			   (make sequence
+				 (literal (substring start 1 (string-length start)))
+				 (process-node-list (node-list-rest children))
+				 )
+			   (process-children)
+			   )
+		       )
+		 )
+	       )
+      )
+
+(element link
+  (let* ((endterm (attribute-string (normalize "endterm")))
+	 (linkend (attribute-string (normalize "linkend")))
+	 (target  (element-with-id linkend))
+	 (etarget (if endterm 
+		      (element-with-id endterm)
+		      (empty-node-list))))
+    (if (node-list-empty? target) 
+	(if %missing-link-error%
+	    (error (string-append "Link to missing ID '" linkend "'"))
+	    (make element gi: "font"
+		  attributes: '(("color" "green"))
+		  (process-children)
+		  )
+	    )
+	(make sequence
+	      (if (and endterm (node-list-empty? etarget))
+		  (error (string-append "EndTerm to missing ID '" endterm "' on Link"))
+		  (empty-sosofo))
+	      (make element gi: "A"
+		    attributes: (list (list "HREF" (href-to target)))
+		    (if endterm
+			(with-mode xref-endterm-mode (process-node-list etarget))
+			(process-children)))))))
+
+
+(element formalpara
+  (make element gi: "DL"
+	attributes: (list
+		     (list "CLASS" (gi)))
+	(make element gi: "dt"
+	      (process-children))))
+
+(element (formalpara title) 
+	 (make element gi: "DT"
+	       (make element gi: "strong"
+		     (process-children)))
+	 )
+
+(element (formalpara para)
+	 (make element gi: "DD"
+	       (process-children)))
+
+(element filename
+	 (make element gi: "TT"
+	       	attributes: '(("CLASS" "filename"))
+	       (process-children))
+	 )
+
+(define (chunk? #!optional (nd (current-node)))
+  ;; 1. The (sgml-root-element) is always a chunk.
+  ;; 2. If nochunks is #t or the dbhtml PI on the root element 
+  ;;    specifies chunk='no', then the root element is the only
+  ;;    chunk.
+  ;; 3. Otherwise, elements in the chunk-element-list are chunks
+  ;;    unless they're combined with their parent.
+  ;; 3a. Things tagged with `newpage' are chunks.
+  ;; 4. Except for bibliographys, which are only chunks if they
+  ;;    occur in book.
+  ;;    
+  (let ((maybechunk (or (not (equal? (gi nd) (normalize "bibliography")))
+			(equal? (gi (parent nd)) (normalize "book")))))
+    (if (node-list=? nd (sgml-root-element))
+	#t
+	(if (or nochunks
+		(equal? (dbhtml-value (sgml-root-element) "chunk") "no"))
+	    #f
+	    (if (member (gi nd) (chunk-element-list))
+		(if (combined-chunk? nd)
+		    #f
+		    maybechunk)
+		(if (attribute-string "newpage" nd) 
+		    maybechunk
+		    #f))))))
+
+
+</style-specification-body>
+</style-specification>
+<external-specification id="docbook" document="dbstyle">
+</style-sheet>
+
--- /dev/null
+++ b/doc/sane_to_docbook.dsl
@@ -0,0 +1,365 @@
+<!DOCTYPE style-sheet PUBLIC "-//James Clark//DTD DSSSL Style Sheet//EN" [
+]>
+
+(declare-flow-object-class element
+  "UNREGISTERED::James Clark//Flow Object Class::element")
+(declare-flow-object-class empty-element
+  "UNREGISTERED::James Clark//Flow Object Class::empty-element")
+(declare-flow-object-class document-type
+  "UNREGISTERED::James Clark//Flow Object Class::document-type")
+(declare-flow-object-class processing-instruction
+  "UNREGISTERED::James Clark//Flow Object Class::processing-instruction")
+(declare-flow-object-class entity
+  "UNREGISTERED::James Clark//Flow Object Class::entity")
+(declare-flow-object-class entity-ref
+  "UNREGISTERED::James Clark//Flow Object Class::entity-ref")
+(declare-flow-object-class formatting-instruction
+  "UNREGISTERED::James Clark//Flow Object Class::formatting-instruction")
+(declare-characteristic preserve-sdata?
+  "UNREGISTERED::James Clark//Characteristic::preserve-sdata?"
+  #f)
+
+(define sect-depth 1)
+(define unique-name (number->string (time)))
+
+(define (copy-attributes #!optional (nd (current-node)))
+  (let loop ((atts (named-node-list-names (attributes nd))))
+    (if (null? atts)
+        '()
+        (let* ((name (car atts))
+               (value (attribute-string name nd)))
+          (if value
+              (cons (list name value)
+                    (loop (cdr atts)))
+              (loop (cdr atts)))))))
+
+(default   
+  (empty-sosofo)
+  )
+
+(element sane 
+	 (process-children)
+	 )
+
+(define (sect-at depth)
+  (if (> depth 0)
+      (string-append "sect" (number->string depth))
+      "chapter"
+      )
+  )
+
+(define (handle-container-item type depth)
+  (let* ((id (attribute-string "id"))
+	 )
+    (make element gi: (sect-at depth)
+	  attributes: (list (list "id" id) (list "role" type))
+	  (make sequence
+		(with-mode build-title (process-node-list (current-node)))
+		(if (equal? depth sect-depth)
+		    (make element gi: "toc"
+			  attributes: '(("depth" "5"))
+			  (empty-sosofo)
+			  )
+		    (empty-sosofo)
+		    )
+		(with-mode text (process-matching-children "cxxdoc"))
+		(process-matching-children "cxxPublic")
+		(process-matching-children "cxxProtected")
+		(process-matching-children "cxxPrivate")
+		(process-matching-children "cxxItems")
+		)
+	  )
+    )
+  )
+
+(define (handle-item type depth)
+  (let* ((id (attribute-string "id"))
+	 )
+    (make element gi: "simpleSect"
+	  attributes: (list (list "id" id) (list "role" type))
+	  (make sequence
+		(with-mode build-title (process-node-list (current-node)))
+		(with-mode text (process-matching-children "cxxdoc"))
+		(with-mode parameters (process-matching-children "parameters"))
+		(process-matching-children "cxxPublic")
+		(process-matching-children "cxxProtected")
+		(process-matching-children "cxxPrivate")
+		(process-matching-children "cxxItems")
+		)
+	  )
+    )
+  )
+
+(define ($xref$)
+	 (let* ((id (attribute-string "linkend")))
+	   (make element gi: "xref"
+			 attributes: (list (list "linkend" id))
+			 (empty-sosofo)
+			 )
+	   )
+	 )
+
+(define (find-depth nd)
+  (let* ((p (parent nd)))
+    (if (null? p)
+	0
+	(case (gi p)
+	  (("CXXCLASS" "CXXINTERFACE" "CXXUNION" "CXXSTRUCT" "CXXENTRY") 
+	   (+ 1 (find-depth p)))
+	  (("SANE") 
+	   0)
+	  (else 
+	   (find-depth p))
+	  )
+	)
+    )
+  )
+
+(define (sgml-root-element)
+  ;; Returns the node that is the root element of the current document
+  (let loop ((root (current-node)))
+    (if (node-list-empty? (parent root))
+        root
+        (loop (parent root)))))
+
+(define (node-depth)
+  (+ sect-depth (find-depth (current-node)))
+  )
+
+(define (unique-filename base ext)
+  (string-append base "_" unique-name "_" (number->string (element-number)) "." ext)
+  )
+    
+
+(element docppRef
+	 ($xref$)
+	 )
+
+(element docppLink
+	 (make element gi: "link"
+	      attributes: (copy-attributes)
+	      )
+	)
+
+(element cxxClass
+	 (handle-container-item "class" (node-depth))
+	 )
+
+(element cxxUnion
+	 (handle-container-item "union" (node-depth))
+	 )
+
+(element cxxInterface
+	 (handle-container-item "interface" (node-depth))
+	 )
+
+(element cxxStruct
+	 (handle-container-item "struct" (node-depth))
+	 )
+
+(element cxxEntry
+	 (handle-container-item "entry" (node-depth))
+	 )
+
+(element cxxMethod
+	 (handle-item "method" (node-depth))
+	 )
+
+(element cxxVariable
+	 (handle-item "variable" (node-depth))
+	 )
+
+(element cxxFunction
+	 (handle-item "function" (node-depth))
+	 )
+
+(element cxxMacro
+	 (handle-item "macro" (node-depth))
+	 )
+
+(element cxxPublic
+	 (process-children)
+	 )
+(element cxxProtected
+	 (process-children)
+	 )
+(element cxxPrivate
+	 (process-children)
+	 )
+(element cxxItems
+	 (process-children)
+	 )
+
+(define ($cpp-title$ before after)
+  (make sequence
+	(make element gi: "title"
+	      (literal before)
+	      (with-mode code (process-matching-children "name"))
+	      (literal after)
+	      )
+	(make element gi: "synopsis"
+	      (make sequence
+		    (make element gi: "synopsis"
+			  attributes: '(("role" "type"))
+			  (with-mode code (process-matching-children "type"))
+			  )
+		    (make element gi: "synopsis"
+			  attributes: '(("role" "name"))
+			  (with-mode code (process-matching-children "name"))
+			  )
+		    (make element gi: "synopsis"
+			  attributes: '(("role" "args"))
+			  (with-mode code (process-matching-children "args"))
+			  )
+		    )
+	      )
+	)
+  )
+(define ($title$)
+  (make element gi: "title"
+	(with-mode text (process-matching-children "name"))
+	)
+  )
+
+
+(mode build-title
+
+      (default (empty-sosofo))
+      
+      
+      (element cxxClass ($cpp-title$ "class " "{}"))
+      (element cxxInterface ($cpp-title$ "interface " "{}"))
+      (element cxxUnion ($cpp-title$ "union " "{}"))
+      (element cxxStruct ($cpp-title$ "struct " "{}"))
+      (element cxxMethod ($cpp-title$ "" "()"))
+      (element cxxFunction ($cpp-title$ "" "()"))
+      (element cxxVariable ($cpp-title$ "" ";"))
+      (element cxxMacro ($cpp-title$ "#define " "()"))
+      (element cxxEntry ($title$))
+      )
+
+(mode code
+
+      (default
+	(make element
+	      attributes: (copy-attributes))
+	)
+
+      (element docppRef
+	       ($xref$)
+	       )
+
+      (element docppLink
+	       (make element gi: "link"
+		     attributes: (copy-attributes)
+		     )
+	       )
+
+      (element args
+	       (process-children)
+	       )
+
+      (element type
+	       (process-children)
+	       )
+
+      (element name
+	       (if (string=? (data (current-node)) "()")
+		   (literal "operator")
+		   (process-children)
+		   )
+	       )
+      )
+
+
+(mode text
+      
+      (default 
+	(make element
+	      attributes: (copy-attributes))
+	)
+
+      (element math
+	 (let* ((file (unique-filename "docppmath" "gif")))
+	   (make element gi: "graphic"
+		 attributes: (list '("format" "tex")
+				   (list "fileref" file))
+		 )
+	      )
+	)
+
+      (element imath
+	 (let* ((file (unique-filename "docppimath" "gif")))
+	   (make element gi: "inlinegraphic"
+		 attributes: (list '("format" "tex")
+				   (list "fileref" file))
+		 )
+	      )
+	)
+
+      (element docppRef
+	       ($xref$)
+	       )
+
+      (element docppLink
+	       (make element gi: "link"
+		     attributes: (copy-attributes)
+		     )
+	       )
+
+      (element cxxdoc
+	       (process-children)
+	       )
+
+      (element expr
+	       (make element gi: "literal"
+		     attributes: (list (list "class" "expression"))
+		     (process-children)
+		     )
+	       )
+      (element method
+	       (make element gi: "function"
+		     attributes: (list (list "class" "method"))
+		     (process-children)
+		     )
+	       )
+
+      (element (parameter name)
+	       (empty-sosofo)
+	       )
+
+      (element name
+	       (process-children)
+	       )
+      
+      )
+
+(mode parameters
+
+      (element parameters
+	       (make element gi: "variableList"
+		     (make sequence
+			   (make element gi: "title"
+				 (literal "Parameters")
+				 )
+			   (process-children)
+			   )
+		     )
+	       )
+
+      (element parameter
+	       (make element gi: "varListEntry"
+		     (make sequence
+			   (make element gi: "term"
+				 (with-mode code (process-matching-children "name"))
+				 )
+			   (make element gi: "listitem"
+				 (make element gi: "para"
+				       (with-mode text (process-children))
+				       )
+				 )
+			   )
+		     )
+	       )
+
+      )
--- /dev/null
+++ b/doc/doc.scm
@@ -0,0 +1,4 @@
+(load (path-append datadir "siod.scm"))
+(load (path-append datadir "cstr.scm"))
+(load_library "festdoc.scm")
+(make-doc)
--- a/lib/festdoc.scm
+++ b/lib/festdoc.scm
@@ -55,6 +55,7 @@
 
  ;; Need to ensure all library files are actually loaded if they contain
  ;; funcstions/variables which have to be put in the manual
+ (require 'festival)
  (require 'display)
  (require 'mbrola)
  (require 'tilt)
